import { Node } from "../Node";
import { BasicAnimation } from "../anim/BasicAnimation";
import { KeyframeAnimation } from "../anim/KeyframeAnimation";
export interface FlexStyle {
    position?: string;
    flexDirection?: string;
    flexWrap?: string;
    justifyContent?: string;
    alignItems?: string;
    alignContent?: string;
    flexGrow?: number;
    flexShrink?: number;
    flexBasis?: number | string;
    alignSelf?: string;
    width?: number | string;
    height?: number | string;
    minWidth?: number | string;
    minHeight?: number | string;
    maxWidth?: number | string;
    maxHeight?: number | string;
    margin?: number | string;
    marginAll?: number | string;
    marginLeft?: number | string;
    marginTop?: number | string;
    marginRight?: number | string;
    marginBottom?: number | string;
    padding?: number | string;
    paddingAll?: number | string;
    paddingLeft?: number | string;
    paddingTop?: number | string;
    paddingRight?: number | string;
    paddingBottom?: number | string;
    left?: number | string;
    top?: number | string;
    right?: number | string;
    bottom?: number | string;
    display?: number | string;
    backgroundColor?: string;
    backgroundImage?: string;
    boxSizing?: string;
    borderStyle?: string;
    borderLeftStyle?: string;
    borderTopStyle?: string;
    borderRightStyle?: string;
    borderBottomStyle?: string;
    borderColor?: string;
    borderLeftColor?: string;
    borderTopColor?: string;
    borderRightColor?: string;
    borderBottomColor?: string;
    borderWidth?: number | string;
    borderLeftWidth?: number | string;
    borderTopWidth?: number | string;
    borderRightWidth?: number | string;
    borderBottomWidth?: number | string;
    borderRadius?: number | string;
    borderTopLeftRadius?: number | string;
    borderTopRightRadius?: number | string;
    borderBottomLeftRadius?: number | string;
    borderBottomRightRadius?: number | string;
    shadow?: string;
    opacity?: number;
    visibility?: string;
    zIndex?: number;
    transform?: string;
    transitionProperty?: string;
    transitionDuration?: number;
    transitionDelay?: number;
    transitionTimingFunction?: string;
}
export declare class Element extends Node {
    private _attributes;
    private _style;
    private _animationMap;
    constructor(tag: string, name?: string, props?: any);
    setAttribute(key: string, value: any): void;
    protected _setAttribute(key: string, value: any, update?: boolean): void;
    protected _removeAttribute(key: string): void;
    protected _initAttributes(attribute: object): void;
    protected _setAttributes(attribute: object): void;
    getAttribute(key: string): any;
    protected _getAttribute(key: string): any;
    setEnable(enabled: any): void;
    getEnable(): any;
    protected setStyle(style: FlexStyle | Record<string, any>, flag?: boolean): void;
    protected _setStyles(style: FlexStyle | Record<string, any> | any): void;
    getStyle(): Record<string, any>;
    addAnimation(animation: BasicAnimation | KeyframeAnimation, key?: string): void;
    private _addAnimation;
    removeAnimationForKey(key: string): void;
    private _removeAnimationForKey;
    removeAllAnimation(): void;
    private _removeAllAnimation;
    getRect(callback: Function): void;
    dbg_getDescription(callback: Function, id: Number): void;
}
