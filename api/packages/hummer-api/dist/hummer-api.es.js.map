{"version":3,"file":"hummer-api.es.js","sources":["../src/HMObject/index.ts","../src/EventTarget/index.ts","../src/Node/index.ts","../src/Element/index.ts","../src/Utils/fixedHelper.ts","../src/HummerElement/index.ts","../src/LifeCycleElement/index.ts","../src/components/View/index.ts","../src/components/Anchor/index.ts","../src/components/Button/index.ts","../src/components/Canvas/index.ts","../src/components/Text/index.ts","../src/components/Image/index.ts","../src/components/Input/index.ts","../src/components/List/index.ts","../src/components/ViewPager/index.ts","../src/components/Scroller/RefreshView.ts","../src/components/Scroller/LoadMoreView.ts","../src/components/Scroller/index.ts","../src/components/TextArea/index.ts","../src/HummerComponent/index.ts","../src/module/HummerApi/index.ts","../src/module/NotifyCenter/index.ts","../src/components/Loading/index.ts","../src/components/Switch/index.ts","../src/components/HorizontalScroller/index.ts","../src/Hummer/index.ts","../src/anim/BasicAnimation/index.ts","../src/anim/KeyframeAnimation/index.ts","../src/components/CanvasView/index.ts","../src/module/Memory/index.ts","../src/module/Dialog/index.ts","../src/module/Toast/index.ts","../src/module/Navigator/index.ts","../src/module/Storage/index.ts","../src/module/Request/index.ts","../src/module/WebSocket/index.ts","../src/components/ListJS/index.ts","../src/index.ts"],"sourcesContent":["const { document: _Document_ } = __Hummer__\n\n//***********************************************/\n//\n//    引擎操作接口挂载点全局上的 ”__hummer__“上\n//\n//***********************************************/\n\nexport class HMObject {\n\n    public tag: string\n    public name: string\n    public isApi: boolean\n\n    private __props__: any\n    private __obj__: any\n\n    public constructor(tag: string, isApi: boolean = true, props: any) {\n        this.tag = tag\n        this.name = tag\n        this.isApi = isApi\n        this.__props__ = props\n        if (isApi) {\n            this.__obj__ = _Document_.createComponent(tag, props)\n            this.__obj__.__shadow__ = this;\n        } else {\n            this.__obj__ = _Document_.createElement(tag, props)\n            this.__obj__.__shadow__ = this;\n        }\n    }\n\n    public static getShadowObject(obj: any) {\n        if (obj && obj.__shadow__) {\n            return obj.__shadow__;\n        }\n        return undefined;\n    }\n\n    public static getOriginObject(obj: any) {\n        if (obj && obj.__obj__) {\n            return obj.__obj__;\n        }\n    }\n\n    //废弃方法，用“getOriginObject()”替代\n    public getThis() {\n        return this.__obj__;\n    }\n\n    public getOriginObject() {\n        return this.__obj__;\n    }\n\n    public getCreateProps() {\n        return this.__props__;\n    }\n\n    protected call(methodName: string, ...args: any): any {\n        return this.__obj__.invoke(methodName, ...args)\n    }\n\n\n\n\n}","import { HMObject } from \"../HMObject\"\n\n\n//***********************************************/\n// 引擎操作接口挂载点全局上的 ”__hummer__“上\n//***********************************************/\n\nexport interface EventListener {\n    onEvent(event: any): any;\n}\n\n/**\n * EventTarget 事件分发实现\n */\nexport class EventTarget extends HMObject {\n\n    protected __enventListenerMap__: Map<string, Array<EventListener | Function>>;\n\n\n    public constructor(tag: string, isApi: boolean = true, props: any) {\n        super(tag, isApi, props)\n        this.__enventListenerMap__ = new Map()\n    }\n\n    //消息事件回调入口\n    public onReceiveEvent(eventName: string, event: any) {\n        event = this.onHandleReceiveEvent(eventName, event);\n        this.dispatchEvent(eventName, event)\n    }\n\n\n    //事件处理增强/扩展\n    protected onHandleReceiveEvent(eventName: string, event: any): any {\n        return event;\n    }\n\n    /**\n     * 绑定 EventTatget\n     */\n    public bindEventTarget() {\n        this.getOriginObject().setEventTarget((eventName: string, event: any) => {\n            this.onReceiveEvent(eventName, event);\n        })\n    }\n\n\n    public dispatchEvent(eventName: string, event: any) {\n        var listeners = this.__enventListenerMap__.get(eventName);\n        if (listeners != undefined) {\n            listeners.forEach((lisener => {\n                if (lisener instanceof Function) {\n                    lisener.call(this, event);\n                } else {\n                    lisener.onEvent(event);\n                }\n            }))\n        } else {\n            console.log(\"dispatchEvent() eventName=\" + eventName + \" not found event listener.\");\n        }\n\n    }\n\n\n    /**\n     * 添加事件监听\n     * \n     * @param eventName \n     * @param eventListener  @see Event \n     * @param useCapture \n     */\n    public addEventListener(eventName: string, eventListener: EventListener | Function, useCapture?: boolean) {\n        var listeners = this.__enventListenerMap__.get(eventName)\n        if (listeners == undefined) {\n            listeners = new Array()\n            this.__enventListenerMap__.set(eventName, listeners);\n        }\n\n        listeners.push(eventListener);\n        this._addEventListener_(eventName);\n    }\n\n\n    private _addEventListener_(eventName: string) {\n        this.getOriginObject().addEventListener(eventName);\n    }\n\n\n    /**\n     * 移除事件监听\n     * \n     * @param eventName \n     * @param eventListener \n     * @param useCapture \n     */\n    public removeEventListener(eventName: string, eventListener?: EventListener | Function, useCapture?: boolean) {\n        var listeners = this.__enventListenerMap__.get(eventName)\n        if (listeners != undefined) {\n            if (eventListener == undefined) {\n                listeners.splice(0, listeners.length);\n                this.__enventListenerMap__.delete(eventName);\n                this._removeEventListener_(eventName);\n            } else {\n                const index = listeners.indexOf(eventListener); // 获取对象在数组中的索引位置\n                if (index > -1) {\n                    listeners.splice(index, 1); // 通过 splice() 函数将该对象从数组中移除\n                } else {\n                    console.log(\"removeEventListener() eventName=\" + eventName + \" not found listener.\");\n                }\n                if (listeners.length == 0) {\n                    this.__enventListenerMap__.delete(eventName);\n                    this._removeEventListener_(eventName);\n                }\n            }\n        }\n\n    }\n\n    private _removeEventListener_(eventName: string) {\n        this.getOriginObject().removeEventListener(eventName);\n    }\n\n\n}","import { EventTarget } from \"../EventTarget\"\n\nexport class Node extends EventTarget {\n\n    /**\n     * 节点名称\n     */\n    public nodeName: string = \"\"\n\n    /**\n     * 标签名称\n     */\n    public name: string = \"\"\n\n    /**\n     * 节点类型\n     */\n    public nodeType: Number = 0\n\n    /**\n     * 父节点\n     */\n    public parentNode?: Node = undefined;\n\n    /**\n     * 当前节点的前一个节点\n     */\n    public prevSibling?: Node | null = null;\n    /**\n     * 当前节点的后一个节点\n     */\n    public nextSibling?: Node | null = null;\n    /**\n     * Node 子节点集合\n     */\n    protected children = new Set<Node>();\n\n    /**\n     * 第一个子节点\n     */\n    public firstChild?: Node | null = null;\n\n    /**\n     * 最后一个子节点\n     */\n    public lastChild?: Node | null = null;\n\n\n    /**\n     * 节点构造函数\n     * \n     * @param tag  节点标签\n     * @param name 组件名称\n     * @param props  构造参数\n     * @param nodeName  节点名称\n     * \n     */\n    public constructor(tag: string, name: string = tag, props: any,nodeName:string = tag) {\n        super(tag, false, props);\n        this.name = name;\n        this.nodeName = nodeName;\n    }\n\n\n    // Mounted 生命周期\n    protected _onMounted_() {\n        this.onMounted();\n    }\n\n    protected onMounted() {\n        //TODO \n    }\n\n    // Destoryed 生命周期\n    protected _onDestoryed_() {\n        // removeChildWithFixed(this);\n        this.onDestoryed();\n    }\n\n    protected onDestoryed() {\n        //TODO \n    }\n\n    /**\n     * 是否有子节点\n     * \n     * @returns 有：true；没有false\n     */\n    public hasChildNodes(): boolean {\n        if (this.children.size > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * \n     * @param child 在末尾添加节点\n     */\n    public appendChild(child: Node) {\n        if(!child){\n            return\n        }\n        child.unlinkSiblings();\n        child.parentNode = this;\n        this.children.add(child);\n\n        if (!this.firstChild) {\n            this.firstChild = child;\n        }\n        child.prevSibling = this.lastChild;\n        child.nextSibling = null;\n        if (this.lastChild) {\n            this.lastChild.nextSibling = child;\n        }\n        this.lastChild = child;\n        this._appendChild_(child);\n        child._onMounted_();\n    }\n\n\n    private _appendChild_(child: Node) {\n        this.getOriginObject().appendChild(child.getOriginObject());\n    }\n\n    private unlinkSiblings() {\n        if (this.parentNode && this.parentNode.firstChild === this) {\n            this.parentNode.firstChild = this.nextSibling;\n        }\n\n        if (this.parentNode && this.parentNode.lastChild === this) {\n            this.parentNode.lastChild = this.prevSibling;\n        }\n\n        if (this.prevSibling) {\n            this.prevSibling.nextSibling = this.nextSibling;\n        }\n\n        if (this.nextSibling) {\n            this.nextSibling.prevSibling = this.prevSibling;\n        }\n\n        this.prevSibling = null;\n        this.nextSibling = null;\n    }\n\n    /**\n     * 移除指定节点\n     * @param child 被移除的节点\n     */\n    public removeChild(child: Node) {\n        if(!child){\n            return\n        }\n        child._onDestoryed_();\n        child.unlinkSiblings();\n        child.parentNode = undefined;\n        this.children.delete(child);\n        this._removeChild_(child);\n    }\n\n    private _removeChild_(child: Node) {\n        this.getOriginObject().removeChild(child.getOriginObject());\n    }\n\n    /**\n     * 在制定节点前插入节点\n     * \n     * @param child  被插入的阶段\n     * @param anchor 插入位置锚点\n     */\n    public insertBefore(child: Node, anchor: Node) {\n        if(!child||!anchor){\n            return\n        }\n        child.unlinkSiblings();\n        child.parentNode = this;\n        if (anchor.prevSibling) {\n            child.prevSibling = anchor.prevSibling;\n            anchor.prevSibling.nextSibling = child;\n        }\n        anchor.prevSibling = child;\n        child.nextSibling = anchor;\n\n        if (this.firstChild === anchor) {\n            this.firstChild = child;\n        }\n        this.children.add(child);\n        this._insertBefore_(child, anchor);\n        child._onMounted_();\n    }\n\n    private _insertBefore_(child: Node, anchor: Node) {\n        this.getOriginObject().insertBefore(child.getOriginObject(), anchor.getOriginObject());\n    }\n\n    /**\n     * 替换节点\n     * \n     * @param newNode 新节点\n     * @param oldNode 旧节点\n     */\n    public replaceChild(newNode: Node, oldNode: Node) {\n        if(!newNode||!oldNode){\n            return\n        }\n        oldNode._onDestoryed_();\n        var _prevSibling = oldNode.prevSibling\n        var _nextSibling = oldNode.nextSibling\n        oldNode.unlinkSiblings();\n        oldNode.parentNode = undefined;\n        this.children.delete(oldNode);\n\n        newNode.unlinkSiblings();\n        newNode.parentNode = this;\n\n        if (_prevSibling) {\n            _prevSibling.nextSibling = newNode;\n            newNode.prevSibling = _prevSibling;\n        }\n        if (_nextSibling) {\n            _nextSibling.prevSibling = newNode;\n            newNode.nextSibling = _nextSibling;\n        }\n\n        if (this.firstChild === oldNode) {\n            this.firstChild = newNode;\n        }\n        if (this.lastChild === oldNode) {\n            this.lastChild = newNode;\n        }\n\n        this.children.add(newNode);\n        this._replaceChild_(newNode, oldNode);\n        newNode._onMounted_()\n\n    }\n\n    private _replaceChild_(newNode: Node, oldNode: Node) {\n        this.getOriginObject().replaceChild(newNode.getOriginObject(), oldNode.getOriginObject());\n    }\n\n    /**\n     * 删除全部节点\n     */\n    public removeAll() {\n        this.children.forEach(child => {\n            child._onDestoryed_();\n            child.unlinkSiblings();\n            child.parentNode = undefined;\n        })\n        this.children.clear()\n        this._removeAll_();\n    }\n\n    private _removeAll_() {\n        this.getOriginObject().removeAll();\n    }\n}","import { Node } from \"../Node\"\nimport { BasicAnimation } from \"../anim/BasicAnimation\"\nimport { KeyframeAnimation } from \"../anim/KeyframeAnimation\"\n\nconst AnimationStartName = \"__onAnimationStart__\"\nconst AnimationEndName = \"__onAnimationEnd__\"\n\n/**\n * 基础样式类型\n */\nexport interface FlexStyle {\n\n    //***************************************************************************\n    // * \n    // * 通用布局样式：Flexbox 样式\n    // *\n    //***************************************************************************\n\n    /**\n     *\n     * 布局方式，分相对布局和绝对布局，相对布局即flex布局\n     * 默认: 'relative'\t\n     * 可选: position: 'relative' | 'absolute' | 'fixed'\n     */\n    position?: string,\n\n    /** \n     * 主轴方向\n     * 默认:'column'\n     * \n     * flexDirection:'column' | 'row'\n     */\n    flexDirection?: string,\n\n    /**\n     * 子控件是否折行排列\n     * 默认: 'nowrap'\n     * \n     * 可选: flexWrap: 'nowrap' | 'wrap' | 'wrap-reverse'\n     */\n    flexWrap?: string,\n\n    /**\n     * 主轴方向上的子控件排列方式\n     * 默认: 'flex-start'\n     * \n     * 可选: justifyContent: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly'\n     */\n    justifyContent?: string,\n\n    /**\n     * \t\n     * 交叉轴方向上的子控件的对齐方式\n     * 默认: 'stretch'\n     * \n     * 可选: alignItems: 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch'\n     */\n    alignItems?: string,\n\n    /**\n     * 多主轴情况下，交叉轴方向上的子控件的排列方式\t\n     * 默认: ‘flex-start’\n     * \n     * 可选: alignContent: flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'stretch'\n     */\n    alignContent?: string,\n\n    /**\n     * 子控件占有父容器剩余空间的权重\t\n     * 默认: 0\n     * \n     * 可选: flexGrow: 1\n     */\n    flexGrow?: number,\n\n    /**\n     * 父容器空间不足时，子控件的收缩权重\n     * 默认:0\n     * \n     * flexShrink: 1\n     */\n    flexShrink?: number,\n\n    /**\n     * 子控件在进行拉伸和收缩计算前的基础尺寸\n     * 默认: 'auto'\t\n     * \n     * 可选: flexBasis: 500 | 'auto'\n     */\n    flexBasis?: number | string,\n\n    /**\n     * 子控件在交叉轴上的对齐方式\t\n     * 默认: 'auto'\t\n     * \n     * 可选: alignSelf: 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch'\n     */\n    alignSelf?: string,\n\n\n    //***************************************************************************\n    // * \n    // * 通用布局样式：盒模型样式\n    // *\n    //***************************************************************************\n\n\n    // width\tnumber|string\t'auto'\t宽度\twidth: 10 | '10px'\n    // height\tnumber|string\t'auto'\t高度\theight: 10 | '10px'\n    // minWidth\tnumber|string\t0\t最小宽度\tminWidth: 10 | '10px'\n    // minHeight\tnumber|string\t0\t最小高度\tminHeight: 10 | '10px'\n    // maxWidth\tnumber|string\t\t最大宽度\tmaxWidth: 10 | '10px'\n    // maxHeight\tnumber|string\t\t最大高度\tmaxHeight: 10 | '10px'\n\n    width?: number | string,\n    height?: number | string,\n    minWidth?: number | string,\n    minHeight?: number | string,\n    maxWidth?: number | string,\n    maxHeight?: number | string,\n\n\n    // margin/marginAll\tnumber|string\t0\t所有四个边的外边距\tmargin: 10 | '10px'\n    // marginLeft\tnumber|string\t0\t左外边距\tmarginLeft: 10 | '10px'\n    // marginTop\tnumber|string\t0\t上外边距\tmarginTop: 10 | '10px'\n    // marginRight\tnumber|string\t0\t右外边距\tmarginRight: 10 | '10px'\n    // marginBottom\tnumber|string\t0\t下外边距\tmarginBottom: 10 | '10px'\n\n    margin?: number | string,\n    marginAll?: number | string,\n    marginLeft?: number | string,\n    marginTop?: number | string,\n    marginRight?: number | string,\n    marginBottom?: number | string,\n\n\n    // padding/paddingAll\tnumber|string\t0\t所有四个边的内边距\tpadding: 10 | '10px'\n    // paddingLeft\tnumber|string\t0\t左内边距\tpaddingLeft: 10 | '10px'\n    // paddingTop\tnumber|string\t0\t上内边距\tpaddingTop: 10 | '10px'\n    // paddingRight\tnumber|string\t0\t右内边距\tpaddingRight: 10 | '10px'\n    // paddingBottom\tnumber|string\t0\t下内边距\tpaddingBottom: 10 | '10px'\n\n    padding?: number | string,\n    paddingAll?: number | string,\n    paddingLeft?: number | string,\n    paddingTop?: number | string,\n    paddingRight?: number | string,\n    paddingBottom?: number | string,\n\n    /**\n     * 距离左边的偏移量\t\n     * 默认:0\n     * \n     * left: 10 | '10px'\n     */\n    left?: number | string,\n    /**\n     * 距离上方的偏移量\t\n     * 默认:0\n     * \n     * top: 10 | '10px'\n     */\n    top?: number | string,\n    /**\n     * 距离右边的偏移量\t\n     * 默认:0\n     * \n     * right: 10 | '10px'\n     */\n    right?: number | string,\n    /**\n     * 距离下方的偏移量\t\n     * 默认:0\n     * \n     * bottom: 10 | '10px'\n     */\n    bottom?: number | string,\n    /**\n     * 控件是否显示（'none'为不显示，且不参与布局）\t\n     * 默认:'flex'\n     * \n     * display: 'none' | 'flex'\n     */\n    display?: number | string,\n\n\n\n    //***************************************************************************\n    // * \n    // * 通用视图样式\n    // *\n    //***************************************************************************\n\n\n    /**\n     * 背景色\t\n     *  默认: '' \n     * \n     * backgroundColor: '#FF0000' | '#FF000080' | 'linear-gradient(90deg #FF000080 #00FF0080)'\n     */\n    backgroundColor?: string,\n\n    /**\n     * 背景图片\t同 Image 组件 的src属性\n     * \n     */\n    backgroundImage?: string,\n    /**\n     * 盒模型模式\n     * 默认: 'none' \n     * \n     * \tboxSizing: 'none' | 'border-box'\n     */\n    boxSizing?: string,\n\n\n    // borderStyle\tstring\t'solid'\t四个边的边框类型\tborderStyle: 'none' | 'solid' | 'dashed' | 'dotted'\n    // borderLeftStyle\tstring\t'solid'\t左边框类型\tborderLeftStyle: 'none' | 'solid' | 'dashed' | 'dotted'\n    // borderTopStyle\tstring\t'solid'\t上边框类型\tborderTopStyle: 'none' | 'solid' | 'dashed' | 'dotted'\n    // borderRightStyle\tstring\t'solid'\t右边框类型\tborderRightStyle: 'none' | 'solid' | 'dashed' | 'dotted'\n    // borderBottomStyle\tstring\t'solid'\t下边框类型\tborderBottomStyle: 'none' | 'solid' | 'dashed' | 'dotted'\n\n    borderStyle?: string,\n    borderLeftStyle?: string,\n    borderTopStyle?: string,\n    borderRightStyle?: string,\n    borderBottomStyle?: string,\n\n    // borderColor\tstring\t'#00000000'\t四个边的边框颜色\tborderColor: '#000000'\n    // borderLeftColor\tstring\t'#00000000'\t左边框颜色\tborderLeftColor: '#000000'\n    // borderTopColor\tstring\t'#00000000'\t上边框颜色\tborderTopColor: '#000000'\n    // borderRightColor\tstring\t'#00000000'\t右边框颜色\tborderRightColor: '#000000'\n    // borderBottomColor\tstring\t'#00000000'\t下边框颜色\tborderBottomColor: '#000000'\n\n\n    borderColor?: string,\n    borderLeftColor?: string,\n    borderTopColor?: string,\n    borderRightColor?: string,\n    borderBottomColor?: string,\n\n\n    // borderWidth\tnumber|string\t0\t四个边的边框宽度\tborderWidth: 10 | '10px'\n    // borderLeftWidth\tnumber|string\t0\t左边框宽度\tborderLeftWidth: 10 | '10px'\n    // borderTopWidth\tnumber|string\t0\t上边框宽度\tborderTopWidth: 10 | '10px'\n    // borderRightWidth\tnumber|string\t0\t右边框宽度\tborderRightWidth: 10 | '10px'\n    // borderBottomWidth\tnumber|string\t0\t下边框宽度\tborderBottomWidth: 10 | '10px'\n\n\n    borderWidth?: number | string,\n    borderLeftWidth?: number | string,\n    borderTopWidth?: number | string,\n    borderRightWidth?: number | string,\n    borderBottomWidth?: number | string,\n\n\n\n    // borderRadius\tnumber|string\t0\t四个角的边框圆角半径\tborderRadius: 10 | '10px'\n    // borderTopLeftRadius\tnumber|string\t0\t左上角边框圆角半径\tborderTopLeftRadius: 10 | '10px'\n    // borderTopRightRadius\tnumber|string\t0\t右上角边框圆角半径\tborderTopRightRadius: 10 | '10px'\n    // borderBottomLeftRadius\tnumber|string\t0\t左下角边框圆角半径\tborderBottomLeftRadius: 10 | '10px'\n    // borderBottomRightRadius\tnumber|string\t0\t右下角边框圆角半径\tborderBottomRightRadius: 10 | '10px'\n\n    borderRadius?: number | string,\n    borderTopLeftRadius?: number | string,\n    borderTopRightRadius?: number | string,\n    borderBottomLeftRadius?: number | string,\n    borderBottomRightRadius?: number | string,\n\n\n\n    /**\n     * 控件阴影（属性分别为：水平偏移量，垂直偏移量，模糊度，颜色）\n     * 默认:\"\"\n     * \n     * eg:shadow: '5px 5px 10px #000000'\n     */\n    shadow?: string,\n    /**\n     * \t透明度\n     * 默认:1\n     * \n     * \topacity: 0.5\n     */\n    opacity?: number,\n    /**\n     * 控件是否显示（'hidden'为不显示，但会参与布局）\n     * 默认:\"visible\"\t\n     * \n     * visibility: 'hidden' | 'visible'\n     */\n    visibility?: string,\n    /**\n     * 控件z轴层级\t\n     * 默认:0\n     * \n     * zIndex: 1\n     */\n    zIndex?: number,\n    /**\n     * 元素变换\t\n     * 默认:\"\"\n     * \n     * transform: 'translate(100,100),scale(0.5)\n     */\n    transform?: string,\n\n\n\n    //***************************************************************************\n    // * \n    // * 通用视图样式：动画\n    // *\n    //***************************************************************************\n\n    /**\n     * 过渡效果的属性名称\t\n     * \n     * 默认:\"\"\n     * eg:transitionProperty: 'transform, backgroundColor'\n     */\n    transitionProperty?: string,\n\n    /**\n     * 过渡效果持续时间（单位：秒）\t\n     * 默认:0\n     * \n     * transitionDuration: '2, 2'\n     */\n    transitionDuration?: number,\n\n    /**\n     * 过渡效果延时时间（单位：秒）\t\n     * 默认:0\n     * \n     * eg:transitionDelay: 2\n     */\n    transitionDelay?: number,\n\n    /**\n     * 过渡效果的运动速率曲线\n     * 默认:'ease'\t\t\n     * \n     * linear: 线性运动\n     * ease: 先加速后减速（结束时会特别慢）\n     * ease-in: 加速运动\n     * ease-out: 减速运动\n     * ease-in-out: 先加速后减速\n     * eg:transitionTimingFunction: 'linear'\n     * \n     */\n    transitionTimingFunction?: string,\n\n\n\n}\n\n\n/**\n * Element \n * \n * 需要对齐前端Element方法，参数MDN\n * \n */\nexport class Element extends Node {\n\n    /**\n     * 元素属性集合\n     */\n    private _attributes: Record<string, any> = {};\n\n\n    /**\n     * 样式集合\n     */\n    private _style: Record<string, any> | null = {};\n\n    /**\n     * 动画集合\n     */\n    private _animationMap: Map<string, BasicAnimation | KeyframeAnimation> = new Map();\n\n    /**\n     * 节点构造函数\n     * \n     * @param tag  节点标签\n     * @param name 节点名称\n     * @param props  构造参数\n     */\n    constructor(tag: string, name: string = tag, props: any = undefined) {\n        super(tag, name, props)\n    }\n\n    /**\n    * 设置属性\n    * \n    * @param key 属性名称\n    * @param value  属性值\n    */\n    public setAttribute(key: string, value: any) {\n        this._setAttribute(key, value);\n    }\n\n\n    protected _setAttribute(key: string, value: any, update: boolean = true) {\n        this._attributes[key] = value;\n        if (update) {\n            this.getOriginObject().setAttributes({ [key]: value });\n        }\n    }\n\n    protected _removeAttribute(key: string) {\n        delete this._attributes[key];\n    }\n\n\n    /**\n    * 初始化属性\n    * \n    * @param attribute  属性\n    */\n    protected _initAttributes(attribute: object) {\n        this._attributes = attribute || {};\n        this.getOriginObject().setAttributes(attribute);\n\n    }\n\n    /**\n     * 设置属性\n     * \n     * @param attribute  属性\n     */\n    protected _setAttributes(attribute: object) {\n        this._attributes = { ...this._attributes, ...attribute }\n        this.getOriginObject().setAttributes(attribute);\n    }\n\n\n    /**\n     * 获取属性名\n     * @param key 属性名\n     */\n    public getAttribute(key: string) {\n        return this._getAttribute(key);\n    }\n\n    protected _getAttribute(key: string) {\n        return this._attributes[key];\n    }\n\n\n    public setEnable(enabled: any) {\n        this._setAttribute(\"enable\", enabled);\n    }\n\n\n    public getEnable(): any {\n        return this._getAttribute(\"enable\");\n    }\n\n    /**\n     * 设置样式\n     * \n     * @param style 样式对象\n     * @param flag 标记\n     */\n    protected setStyle(style: FlexStyle | Record<string, any>, flag: boolean = false) {\n        this._setStyles(style);\n    }\n\n\n    protected _setStyles(style: FlexStyle | Record<string, any> | any) {\n        //TODO 临时代码，待优化\n        let newStyle: any = {};\n        if (style.margin !== undefined) {\n            newStyle.marginLeft = style.margin;\n            newStyle.marginTop = style.margin;\n            newStyle.marginRight = style.margin;\n            newStyle.marginBottom = style.margin;\n        }\n        if (style.padding !== undefined) {\n            newStyle.paddingLeft = style.padding;\n            newStyle.paddingTop = style.padding;\n            newStyle.paddingRight = style.padding;\n            newStyle.paddingBottom = style.padding;\n        }\n        if (style.borderStyle !== undefined) {\n            newStyle.borderLeftStyle = style.borderStyle;\n            newStyle.borderTopStyle = style.borderStyle;\n            newStyle.borderRightStyle = style.borderStyle;\n            newStyle.borderBottomStyle = style.borderStyle;\n        }\n        if (style.borderColor !== undefined) {\n            newStyle.borderLeftColor = style.borderColor;\n            newStyle.borderTopColor = style.borderColor;\n            newStyle.borderRightColor = style.borderColor;\n            newStyle.borderBottomColor = style.borderColor;\n        }\n        if (style.borderWidth !== undefined) {\n            newStyle.borderLeftWidth = style.borderWidth;\n            newStyle.borderTopWidth = style.borderWidth;\n            newStyle.borderRightWidth = style.borderWidth;\n            newStyle.borderBottomWidth = style.borderWidth;\n        }\n\n        if (style.borderRadius !== undefined) {\n            newStyle.borderTopLeftRadius = style.borderRadius;\n            newStyle.borderTopRightRadius = style.borderRadius;\n            newStyle.borderBottomLeftRadius = style.borderRadius;\n            newStyle.borderBottomRightRadius = style.borderRadius;\n        }\n\n        this._style = { ...newStyle, ...style };\n\n        this.getOriginObject().setStyles(this._style);\n    }\n\n\n    public getStyle() {\n        return this._style || {}\n    }\n\n    /**\n     *  添加动画\n     * \n     * @param animation 动画对象\n     * @param key  动画唯一key\n     */\n    public addAnimation(animation: BasicAnimation | KeyframeAnimation, key: string = \"\") {\n        if (animation) {\n            this._addAnimation(animation, key);\n        } else {\n            console.warn(\"addAnimation() animation is \" + typeof (animation));\n        }\n    }\n\n\n    /**\n     * //TODO 建议在这边做事件分发。\n     * \n     * @param animation \n     * @param key \n     */\n    private _addAnimation(animation: BasicAnimation | KeyframeAnimation, key: string = \"__default__\") {\n        // 监听动画的开始和结束事件\n        let lastAnim = this._animationMap.get(key);\n\n        if (lastAnim) {\n            this.removeEventListener(AnimationStartName, lastAnim.startCallback);\n            this.removeEventListener(AnimationEndName, lastAnim.endCallback);\n        }\n        this.addEventListener(AnimationStartName, animation.startCallback);\n        this.addEventListener(AnimationEndName, animation.endCallback);\n\n        // 临时存储，方面后面移除监听\n        animation.key = key;\n        this._animationMap && this._animationMap.set(key, animation);\n        this.getOriginObject().addAnimation(animation, key);\n    }\n\n    /**\n     * 移除指定动画\n     * @param key 动画对象的唯一key\n     */\n    public removeAnimationForKey(key: string) {\n        this._removeAnimationForKey(key);\n    }\n\n    private _removeAnimationForKey(key: string) {\n        // 移除事件监听\n        let lastAnim = this._animationMap.get(key);\n        if (lastAnim) {\n            this.removeEventListener(AnimationStartName, lastAnim.startCallback);\n            this.removeEventListener(AnimationEndName, lastAnim.endCallback);\n        }\n        this._animationMap.delete(key);\n        this.getOriginObject().removeAnimationForKey(key);\n    }\n\n    /**\n     * 移除全部动画\n     */\n    public removeAllAnimation() {\n        this._removeAllAnimation();\n    }\n\n\n    private _removeAllAnimation() {\n        // 移除事件监听\n        this.removeEventListener(AnimationStartName);\n        this.removeEventListener(AnimationEndName);\n        this._animationMap.clear();\n        this.getOriginObject().removeAllAnimation();\n    }\n\n    /**\n     * 获取视图区域\n     * @param callback  区域信息回调\n     */\n    public getRect(callback: Function) {\n        this.getOriginObject().getRect((rect: object) => {\n            callback.call(this, rect);\n        })\n    }\n\n\n    /**\n     * 获取节点调试信息\n     * \n     * @param callback \n     * @param id \n     */\n    public dbg_getDescription(callback: Function, id: Number) {\n        console.log(\"dbg_getDescription()\");\n    }\n\n}","import { HummerElement } from './../HummerElement';\n\nexport interface FixedNode {\n  // id: number,\n  node: HummerElement\n  parents: null | Set<number>\n}\n\n// 为了便于根据 __view_id 查询对应的节点，空间换时间。为 Fixed 元素的收集服务。\n// export const ViewCache:WeakMap<Base, number> = new WeakMap(); \n\nexport const FixedViewCache:Map<number, FixedNode> = new Map<number, FixedNode>();\n\n\nexport const handleFixedNodeByStyle = (node:HummerElement, newStyle:Record<string, string>):Boolean =>{\n  let oldPosition = node.style &&  node.style.position;\n  let newPosition = newStyle && newStyle.position;\n  if(newPosition === 'fixed'){\n    registerFixedNode(node)\n    return true\n  }\n  if(oldPosition === 'fixed' && newPosition !== 'fixed'){\n    unRegisterFixedNode(node)\n    return false\n  }\n  return false\n}\n\nexport const registerFixedNode = (node:HummerElement) => {\n  let fixedNode = {\n    node,\n    parents: node.parentNode? getParentIds(node): null \n  }\n  FixedViewCache.set(node.__view_id, fixedNode)\n}\n\nexport const unRegisterFixedNode = (node:HummerElement) => {\n  let {__view_id:id} = node\n  FixedViewCache.delete(id)\n}\n\nexport const updateFixedNodeParents = () => {\n  FixedViewCache.forEach((fixedNode: FixedNode) => {\n    let {node} = fixedNode\n    if(fixedNode.parents === null){\n      fixedNode.parents = getParentIds(node)\n    }\n  })\n}\nexport const removeChildWithFixed = (node:HummerElement) => {\n  let {__view_id} = node\n  FixedViewCache.forEach((fixedNode: FixedNode) => {\n    let {node: iNode, parents} = fixedNode\n    if(fixedNode.parents === null){\n      parents = fixedNode.parents = getParentIds(iNode)\n    }\n    if(parents && parents.has(__view_id)){\n      deleteNode(iNode)\n    }\n    if(node === iNode){\n      FixedViewCache.delete(__view_id)\n    }\n  })\n  // deleteCacheNode(node);\n}\n\n/**\n * 获取节点的所有Parents\n * @param node \n */\nfunction getParentIds(node: HummerElement):Set<number>{\n  let ids = new Set<number>();\n  // let node = ViewCache.get(id);\n  let iNode: HummerElement | undefined = node\n  while(iNode){\n    if(iNode.parentNode){\n      ids.add((iNode.parentNode as HummerElement).__view_id)\n    }\n    iNode = iNode.parentNode as HummerElement\n  }\n  return ids\n}\n\n/**\n *  删除节点\n * @param node Base\n */\nfunction deleteNode(node: HummerElement){\n  // let node = ViewCache.get(id);\n  let {__view_id} = node\n  if(node && node.parentNode){\n    node.parentNode.removeChild(node);\n  }\n  FixedViewCache.delete(__view_id);\n}","import { EventListener } from \"src/EventTarget\";\nimport { FlexStyle, Element } from \"../Element\"\nimport { HummerGlobalProxy } from \"./HummerGlobalProxy\"\nimport { handleFixedNodeByStyle, removeChildWithFixed } from \"src/Utils/fixedHelper\";\n\n\n/**\n * 基础事件结构\n */\nexport interface HMEvent<T> {\n    /**\n     * \t事件类 \n     * \n     * eg: type: 'input'\n     */\n    type?: string,\n\n    /**\n     * 输入状态\t\n     * eg:<input>\n     * // state: 1 // began（输入框获得焦点时的回调）\n     * // state: 2 // changed（输入框输入内容时的回调）\n     * // state: 3 // ended（输入框失去焦点时的回调）\n     * // state: 4 // confirmed（输入框完成输入时的回调）\n     */\n    state: T,\n\n    /**\n     * 时间戳\ttimestamp: 1578973450142\n     */\n    timestamp?: number\n}\n\n\n/**\n * 触摸事件\n * \n * eventName:'touch'\n * \n */\nexport interface TouchEvent extends HMEvent<number> {\n\n    /**\n     * 手势状态\n     * \n     * state: 0 // normal\n     * state: 1 // began\n     * state: 2 // changed\n     * state: 3 // ended\n     * state: 4 // cancelled   \n     */\n    state: number,\n\n    /**\n     * 触摸位置（单位：dp或pt）\t\n     * \n     * position: {x: 111.1, y: 222.2}\n     */\n    position?: object\n}\n\n/**\n * 点击事件\n * \n * eventName:'tap'\n */\nexport interface TapEvent extends HMEvent<number> {\n\n    /**\n    * 手势状态 \n    * \n    * state: 0 // normal\n    * state: 1 // began\n    * state: 2 // changed\n    * state: 3 // ended\n    * state: 4 // cancelled   \n    */\n    state: number,\n    /**\n    * 触摸位置（单位：dp或pt）\t\n    * \n    * position: {x: 111.1, y: 222.2}\n    */\n    position?: object\n\n}\n\n/**\n * 长按事件\n * \n * eventName:'longPress'\n */\nexport interface LongPressEvent extends HMEvent<number> {\n\n    /**\n    * 手势状态 \n    * \n    * state: 0 // normal\n    * state: 1 // began\n    * state: 2 // changed\n    * state: 3 // ended\n    * state: 4 // cancelled   \n    */\n    state: number,\n    /**\n    * 触摸位置（单位：dp或pt）\t\n    * \n    * position: {x: 111.1, y: 222.2}\n    */\n    position?: object\n\n}\n\n/**\n * 拖动事件\n * \n * eventName:'pan'\n */\nexport interface PanEvent extends HMEvent<number> {\n\n    /**\n    * 手势状态 \n    * \n    * state: 0 // normal\n    * state: 1 // began\n    * state: 2 // changed\n    * state: 3 // ended\n    * state: 4 // cancelled   \n    */\n    state: number,\n    /**\n    * 移动的偏移位置（单位：dp或pt）\t\n    * \n    * translation: {deltaX: 10, deltaY: 20.5}\n    */\n    translation?: object\n}\n\n/**\n * 扫动事件\n * \n * eventName:'swipe'\n */\nexport interface SwipeEvent extends HMEvent<number> {\n\n    /**\n     * 手势状态 \n     * \n     * state: 0 // normal\n     * state: 1 // began\n     * state: 2 // changed\n     * state: 3 // ended\n     * state: 4 // cancelled   \n     */\n    state: number,\n    /**\n     * 滑动方向\t(1:right, 2:left, 4:up, 8:down)\t\n     * \n     * direction: 1\n     * \n     */\n    direction?: number\n}\n\n/**\n * 缩放事件\n * \n * eventName:'pinch'\n */\nexport interface PinchEvent extends HMEvent<number> {\n    /**\n     * 手势状态 \n     * \n     * state: 0 // normal\n     * state: 1 // began\n     * state: 2 // changed\n     * state: 3 // ended\n     * state: 4 // cancelled   \n     */\n    state: number,\n\n    /**\n     * 拉伸的比例\t\t\n     * \n     * scale: 1.5\n     */\n    scale?: number\n\n}\n\n\nexport type ViewEvent = TouchEvent | TapEvent | LongPressEvent | PanEvent | SwipeEvent | PinchEvent;\n\n\nlet __view_id = 0;\n/**\n * HummerElement\n * \n * 1、提供Element标准以外的Hummer能力\n * 2、对接Tenon实现/保留能力\n */\nexport class HummerElement extends Element {\n\n\n    public __scopedIds = new Set<string>();//作用域ID\n\n    public __NAME: Symbol | null = null;//节点类型（）\n    public __view_id: number = 0;\n\n\n    public dataset: any = {};//扩展数据存储   \n\n    public viewId: string = \"\";\n\n    protected __defaultStyle: Record<string, string> | null = {};\n    protected __style: Record<string, string> | null = {};\n    protected __baseStyle: Record<string, string> | null = {};\n    protected __propsVue__ = new Map<any, any>();\n\n    private globalProxy: HummerGlobalProxy | undefined = undefined;//代理处理\n\n\n\n    /**\n     * 视图Element构造函数\n     * \n     * @param tag  视图标签，必须与平台导出组件名称一致\n     * @param name  视图名称，用于给组件取名称，组件封装后应当给封装的组件根节点一个表示其功能的名称，设计用于加快DIFF算法。\n     * @param props 组件构造参数：必须包含：viewId，用于“getElementById()” 查找节点。或者 Node dump标示不同Element。\n     */\n    public constructor(tag: string, name: string = tag, props: any) {\n        super(tag, name, props);\n        this.bindEventTarget();\n        this.__view_id = ++__view_id;\n        this.viewId = props.viewId;\n        this.globalProxy = this.getProxy();\n        this.initialize();\n    }\n\n\n    /**\n     * //TODO 后续发布需要移除，并在业务代码中替换为新的方式，用“构造函数”替代\n     * 已废弃/临时兼容旧版本\n     */\n    protected initialize() {\n\n    }\n\n    /**\n     * 获取代理接口\n     * @returns \n     */\n    private getProxy() {\n        if (__Hummer__ && __Hummer__.__globalProxy__) {\n            return __Hummer__.__globalProxy__;\n        }\n        return undefined;\n    }\n\n    //扩展支持disabled,与enabled相反\n    public get enabled() {\n        return super.getEnable();\n    }\n\n    //扩展支持disabled,与enabled相反\n    public set enabled(enabled: boolean) {\n        super.setEnable(enabled);\n    }\n\n    //扩展支持disabled,与enabled相反\n    public get disabled() {\n        return !this.getEnable();\n    }\n\n    //扩展支持disabled,与enabled相反\n    public set disabled(disabled: Boolean | Record<string, any>) {\n        if (typeof disabled === 'boolean') {\n            super.setEnable(!disabled);\n        }\n    }\n\n    //扩展支持 className\n    public get className() {\n        return this._getAttribute('class')\n    }\n\n\n    //扩展样式属性\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: FlexStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n\n    protected setStyle(value: FlexStyle | Record<string, any>, flag: boolean = false) {\n        if (this.globalProxy) {\n            this.globalProxy.setStyle(this, value, flag);\n        } else {\n            this.superSetStyle(value, false)\n        }\n    }\n\n    protected onDestoryed() {\n        // fixed节点处理\n        removeChildWithFixed(this);\n    }\n\n\n    /**\n     *  提供的父类方法，绕开代理\n     * @param value\n     * @param flag \n     */\n    public superSetStyle(value: FlexStyle | object, flag: boolean = false) {\n        // fixed节点处理\n        handleFixedNodeByStyle(this, value as Record<string, string>);\n        super.setStyle(value, false);\n    }\n\n    public setScopeId(id: string) {\n        this.__scopedIds.add(id)\n        this.updateStyle();\n    }\n\n\n    public updateStyle() {\n        let className = this._getAttribute('class');\n        this.updateClassStyle(className);\n    }\n\n    /**\n     * 根据class更新样式，如果不在tenon环境中无globalProxy，无操作\n     * \n     * @param className class名称\n     */\n    public updateClassStyle(className: string) {\n        if (this.globalProxy) {\n            this.globalProxy.updateClassStyle(this, className);\n        }\n    }\n\n    /**\n     * 扩展处理动画\n     * \n     * @param animation \n     * TODO:保持 Tenon Vue 的兼容，后期切换成同一 Core后，进行变更\n     */\n    public handleAnimation(animation: any) {\n        this.setAnimation(animation);\n    }\n\n    /**\n     * 扩展设置动画\n     * \n     * @param animation \n     */\n    public setAnimation(animation: any) {\n        if (this.globalProxy) {\n            this.globalProxy.handleAnimation(this, animation);\n        } else {\n            super.addAnimation(animation);\n        }\n    }\n\n    /**\n     * 不支持方法\n     * @param text \n     */\n    public setElementText(text: string) {\n        // TODO 抛出异常\n        console.warn('非text元素不支持')\n    }\n\n    /**\n    * 获取属性名\n    * @param key 属性名\n    */\n    public getAttribute(key: string) {\n        switch (key) {\n            case 'disabled':\n                return this.disabled\n            default:\n                return this._getAttribute(key)\n        }\n    }\n\n    /**\n     * 设定属性\n     * @param key 属性名\n     * @param value 属性值\n     */\n    public setAttribute(key: string, value: any) {\n        this.setCacheProp(key, value)\n        switch (key) {\n            case 'disabled':\n                this.disabled = value !== false;\n                break;\n            case 'class':\n                this.updateClassStyle(value);\n                break;\n            default:\n                this._setAttribute(key, value);\n                break;\n        }\n    }\n\n    public empty() {\n        this.call(\"empty\")\n    }\n\n\n    public get props() {\n        return this.__propsVue__;\n    }\n\n    // Cache Props To Get\n    private setCacheProp(key: string, value: any) {\n        // 如果是 dataattr 格式的属性，缓存到 dataset 中，方便事件可以获取到 dataset （Chameleon事件需求）\n        if (/^data/.test(key)) {\n            let dataKey = key.slice(4).toLowerCase()\n            if (dataKey) {\n                this.dataset[dataKey] = value\n            }\n        }\n        this.__propsVue__.set(key, value)\n    }\n\n\n    protected override onHandleReceiveEvent(eventName: string, event: any): any {\n        if (this.globalProxy) {\n            return this.globalProxy.onHandleReceiveEvent(this, event);\n        }\n        return super.onHandleReceiveEvent(eventName, event);\n    }\n\n\n\n\n    public addEventListener(eventName: string,\n        eventListener: (event: TouchEvent | TapEvent | LongPressEvent | PanEvent | SwipeEvent | PinchEvent | any) => void\n            | Function\n            | EventListener,\n        useCapture?: boolean | undefined): void {\n        super.addEventListener(eventName, eventListener, useCapture);\n    }\n\n\n    public getElementById(id: string): HummerElement | undefined {\n        return this.findElementById(id);\n    }\n\n    public findElementById(id: string): HummerElement | undefined {\n        //console.info(\"findElementById() this=\" + this.viewId + \",id=\" + id + \",__view_id=\" + this.__view_id);\n        if (id == \"\") {\n            return undefined;\n        }\n        if (this.viewId == id) {\n            return this;\n        }\n        let result = undefined;\n\n        let childNode: HummerElement | undefined = this.firstChild ? this.firstChild as HummerElement : undefined;\n\n        while (childNode) {\n            let target = childNode.findElementById(id);\n            if (target) {\n                //console.info(\"findElementById(): this=\" + this.__view_id + \",id=\" + id + \",__view_id=\" + target.__view_id);\n\n                result = target;\n                childNode = undefined;\n            } else {\n                childNode = childNode.nextSibling ? childNode.nextSibling as HummerElement : undefined;\n            }\n        }\n        return result;\n    }\n}","\nconst { document: _Document, proxy: _Proxy } = __Hummer__\n\nimport { HummerElement } from \"../HummerElement\"\n\n\n/**\n * LifeCycleElement\n * \n * 提供页面生命周期能力,仅在作为根节点有效\n */\nexport class LifeCycleElement extends HummerElement {\n\n    public constructor(tag: string, name: string = tag, props: any) {\n        super(tag, name, props);\n    }\n\n\n    /**\n     * 分发页面事件\n     * \n     * 页面事件无需注册，自动向下分发\n     * \n     * @param eventName  事件名称\n     * @param event 事件类型\n     */\n    public override dispatchEvent(eventName: string, event: any): void {\n        switch (eventName) {\n            case '__onCreate__':\n                this.onCreate();\n                break;\n            case '__onAppear__':\n                this.onAppear();\n                break;\n            case '__onDisappear__':\n                this.onDisappear();\n                break;\n            case '__onDestroy__':\n                this.onDestroy();\n                break;\n            case '__onBack__':\n                this.onBack();\n                break;\n        }\n        //继续向下分发事件\n        super.dispatchEvent(eventName, event);\n    }\n\n\n    /**\n     * 页面创建\n     *  native 不提供onReady， \n     *  需手动加一个onReady生命周期\n     */\n    public onCreate(e?: undefined | Function | any) {\n\n    }\n\n\n    /**\n     * 页面显示周期\n     */\n    public onAppear() {\n\n    }\n\n    /**\n     * 页面隐藏\n     */\n    public onDisappear() {\n\n    }\n\n    /**\n     * 页面销毁\n     */\n    public onDestroy() {\n\n    }\n\n    /**\n     * 页面返回事件\n     * 需要控制页面是否可以返回，需要设置属性：canGoBack；而不是通过返回值\n     * @param event  事件信息，包含当前页面是否可返回:canGoBack\n     * @returns \n     */\n    public onBack() {\n\n    }\n\n    public get canGoBack(): boolean {\n        return this._getAttribute('canGoBack');\n    }\n\n    public set canGoBack(canGoBack: boolean) {\n        this._setAttribute('canGoBack', canGoBack);\n    }\n\n\n}","import { LifeCycleElement } from \"../../LifeCycleElement\"\nimport { FlexStyle } from \"../../Element\"\n\n\n/**\n * 除支持 通用布局样式 和 通用视图样式 以外，还支持以下样式\n */\nexport interface ViewStyle extends FlexStyle {\n\n    /**\n     * 子控件超出父容器部分是否显示\n     * 默认:'visible'\t\n     * \n     * overflow: 'hidden' | 'visible'\n     */\n    overflow?: string\n}\n\n\nexport class View extends LifeCycleElement {\n\n\n    /**\n     * 构造方法\n     * \n     * @param id \n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"View\", name, { ...props, viewId: id });\n        //设置默认属性值\n        this._initAttributes({\n            overflow: 'visible'\n        });\n    }\n\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: ViewStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n\n    //扩展样式属性\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n\n    /**\n     * 扩展属性:子控件超出父容器部分是否显示\n     * 默认:'visible'\n     * \n     * 可选:overflow: 'hidden' | 'visible'\n     */\n    set overflow(value: string) {\n        this._setAttribute(\"overflow\", value);\n    }\n\n\n    get overflow(): string {\n        return this._getAttribute('overflow');\n    }\n\n}","import { View } from \"../../components/View\"\n\n/**\n * 锚点\n */\nexport class Anchor extends View {\n\n\n    /**\n     * 构造函数\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any= {}) {\n        super(id, name, props);\n        \n        this.setStyle({\n            display: \"none\"\n        });\n    }\n\n\n}","import { HummerElement } from \"../../HummerElement\"\nimport { FlexStyle } from \"../../Element\"\n\n\nexport interface ButtonStyle extends FlexStyle {\n    /**\n     * 文本颜色\t\n     * 默认:系统默认\n     * \n     * color: '#000000'\n     */\n    color?: string\n    /**\n     * 字体\t\n     * 默认:系统默认\n     * \n     * fontFamily: 'Times New Roman'\n     */\n    fontFamily?: string\n    /**\n     * 字体大小\t\n     * 默认:16\n     * \n     * fontSize: 16 | '48px'\n     */\n    fontSize?: number | string\n    /**\n     * 文本对齐方式\t\n     * 默认:'left'\n     * \n     * textAlign:'left' | 'center' | 'right'\n     */\n    textAlign?: string\n}\n\n\nexport class Button extends HummerElement {\n\n\n    /**\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"Button\", name, { ...props, viewId: id });\n    }\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: ButtonStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n\n    //扩展样式属性\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n    /**\n     * 按钮文案\n     */\n    get text() {\n        return this._getAttribute(\"text\")\n    }\n\n    set text(value: string) {\n        this._setAttribute(\"text\", value);\n    }\n\n    /**\n     * 按压状态下的样式\n     */\n    get pressed() {\n        return this._getAttribute(\"pressed\")\n    }\n\n    set pressed(value: object) {\n        this._setAttribute(\"pressed\", value);\n    }\n\n\n    public setElementText(text: string): void {\n        this.text = text;\n    }\n\n\n    /**\n     * 禁用状态下的样式\n     */\n    override get disabled() {\n        return this._getAttribute(\"disabled\")\n    }\n\n    override set disabled(value: Boolean | Record<string, any>) {\n        if (typeof value === \"boolean\") {\n            super.disabled = value\n        } else {\n            this._setAttribute(\"disabled\", value);\n        }\n    }\n\n\n    /**\n    * \n    * @param key \n    * @param value \n    * @returns \n    * \n    * 1、所有组件支持的属性都需要写 get set方法 兼容旧版本api使用。\n    * 2、对有额外处理的需要重新setAttribute方法，对tenon调用接口做补充，增加额外处理\n    */\n    public setAttribute(key: string, value: any): void {\n        switch (key) {\n            case 'disabled':\n                if (typeof value === \"boolean\") {\n                    super.disabled = value\n                } else {\n                    this._setAttribute(\"disabled\", value);\n                }\n                return;\n        }\n        super.setAttribute(key, value);\n    }\n\n\n\n}","import { HummerElement } from \"../../HummerElement\"\n\n\nexport class Canvas extends HummerElement {\n\n\n\n    /**\n     * Canvas\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"Canvas\", name, { ...props, viewId: id });\n    }\n\n    /**\n     * 设置stroke的线粗细\n     * @param widthValue 粗细值，支持px，hm 单位， 如果不写单位就是dp\n     */\n    lineWidth(widthValue: number) {\n        this.call(\"lineWidth\", widthValue);\n    }\n\n    /**\n     * 设置stroke的颜色\n     * @param colorHex 颜色16进制\n     */\n    lineColor(colorHex: string) {\n        this.call(\"lineColor\", colorHex);\n    }\n\n    /**\n     * 设置线头样式\n     * @param value 0:LineCapButt, ， 1:LineCapRound   2:LineCapSquare\n     */\n    lineCap(value: number) {\n        this.call(\"lineCap\", value);\n    }\n\n\n    /**\n     * 设置折线折点样式\n     * @param value 0:LineJoinMiter, ， 1:LineJoinRound  2:LineJoinBevel\n     */\n    lineJoin(value: number) {\n        this.call(\"lineJoin\", value);\n    }\n\n    /**\n     * 根据入参，在起始点与终点之间画一条线段\n     * @param fromX 起点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param fromY 起点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param toX 终点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param toY 终点的y值，支持px，hm 单位， 如果不写单位就是dp\n     */\n    drawLine(fraomX: number, fromY: number, toX: number, toY: number) {\n        this.call(\"drawLine\", fraomX, fromY, toX, toY);\n    }\n\n    /**\n     * 画矩形\n     * @param x 矩形左上角坐标点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param y 矩形左上角坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param w 矩形宽，支持px，hm 单位， 如果不写单位就是dp\n     * @param h 矩形高，支持px，hm 单位， 如果不写单位就是dp\n     */\n    strokeRect(x: number, y: number, w: number, h: number) {\n        this.call(\"strokeRect\", x, y, w, h);\n    }\n\n    /**\n     * 画椭圆\n     * @param x 椭圆所在矩形左上角坐标点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param y 椭圆所在矩形左上角坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param trailX 椭圆所在矩形右下角坐标点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param trailY 椭圆所在矩形右下角坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     */\n    strokeEllipse(x: number, y: number, trailX: number, trailY: number) {\n        this.call(\"strokeEllipse\", x, y, trailX, trailY);\n    }\n\n\n    /**\n     * 画圆形\n     * @param x 圆心坐标点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param y 圆心坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param raduis 半径 ， 支持px，hm 单位， 如果不写单位就是dp\n     */\n    strokeCircle(x: number, y: number, radius: number) {\n        this.call(\"strokeCircle\", x, y, radius);\n    }\n\n    /**\n     * 画弧形\n     * @param x 圆心坐标点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param y 圆心坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param raduis 半径 ， 支持px，hm 单位， 如果不写单位就是dp\n     * @param startAngle 起始弧度 ， \n     * @param endAngle 结束弧度 ，\n     * @param clockwise ture 顺时针 ， false 逆时针\n     */\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, clockwise: boolean) {\n        this.call(\"arc\", x, y, radius, startAngle, endAngle, clockwise);\n    }\n\n\n\n\n    /**\n     * 设置填充颜色\n     * @param colorHex 颜色16进制\n     */\n    fillColor(colorHex: string) {\n        this.call(\"fillColor\", colorHex);\n    }\n\n\n\n    /**\n     * 填充矩形\n     * @param x 矩形左上角坐标点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param y 矩形左上角坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param w 矩形宽，支持px，hm 单位， 如果不写单位就是dp\n     * @param h 矩形高，支持px，hm 单位， 如果不写单位就是dp\n     */\n    fillRect(x: number, y: number, w: number, h: number) {\n        this.call(\"fillRect\", x, y, w, h);\n    }\n\n\n\n\n    /**\n     * 填充椭圆\n     * @param x 椭圆所在矩形左上角坐标点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param y 椭圆所在矩形左上角坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param trailX 椭圆所在矩形右下角坐标点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param trailY 椭圆所在矩形右下角坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     */\n    fillEllipse(x: number, y: number, trailX: number, trailY: number) {\n        this.call(\"fillEllipse\", x, y, trailX, trailY);\n    }\n\n\n\n\n    /**\n     * 填充圆形\n     * @param x 圆心坐标点的x值，支持px，hm 单位， 如果不写单位就是dp\n     * @param y 圆心坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param raduis 半径 ， 支持px，hm 单位， 如果不写单位就是dp\n     */\n    fillCircle(x: number, y: number, radius: number) {\n        this.call(\"fillCircle\", x, y, radius);\n    }\n\n\n\n    /**\n     * 设置绘制文本字号\n     * @param size 字号大小\n     */\n    fontSize(size: number) {\n        this.call(\"fontSize\", size);\n    }\n\n\n    /**\n     * 设置绘制文本字色\n     * @param colorHex 字体颜色 16进制色号\n     */\n    textColor(colorHex: string) {\n        this.call(\"textColor\", colorHex);\n    }\n\n\n\n    /**\n     * 绘制文本\n     * @param text 需要绘制的文本\n     * @param x 文本左上角坐标x值 , 支持px，hm 单位， 如果不写单位就是dp\n     * @param y 文本左上角坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param maxWidth 文本换行的最大宽度, 0 代表不换行,支持px，hm 单位， 如果不写单位就是dp\n     */\n    fillText(text: string, x: number, y: number, maxWidth: number) {\n        this.call(\"fillText\", text, x, y, maxWidth);\n    }\n\n\n\n\n    /**\n     * 绘制图片\n     * @param src 图片资源链接,远程url或本地图片名\n     * @param x 图片左上角坐标x值 , 支持px，hm 单位， 如果不写单位就是dp\n     * @param y 图片左上角坐标点的y值，支持px，hm 单位， 如果不写单位就是dp\n     * @param width 图片宽 ,支持px，hm 单位， 如果不写单位就是dp\n     * @param height 图片高 ,支持px，hm 单位， 如果不写单位就是dp\n     */\n    drawImage(src: string, x: number, y: number, width: number, height: number) {\n        this.call(\"drawImage\", src, x, y, width, height);\n    }\n\n}","import { HummerElement } from \"../../HummerElement\"\nimport { FlexStyle } from \"../../Element\"\n\n\n\nexport interface TextStyle extends FlexStyle {\n\n    // color\tstring\t系统默认\t文本颜色\tcolor: '#000000'\n    // fontFamily\tstring\t系统默认\t字体\tfontFamily: 'Times New Roman'\n    // fontSize\tnumber|string\t16\t字体大小\tfontSize: 16 | '48px'\n    // fontWeight\tstring\t'normal'\t字体粗细\tfontWeight: 'normal' | 'bold'\n    // fontStyle\tstring\t'normal'\t字体样式（斜体）\tfontStyle: 'normal' | 'italic'\n\n    color?: string\n    fontStyle?: string\n    fontFamily?: string\n    fontSize?: number | string\n    fontWeight?: string\n\n    // textAlign\tstring\t'left'\t文本水平对齐方式\ttextAlign: 'left' | 'center' | 'right'\n    // textVerticalAlign\tstring\t'center'\t文本垂直对齐方式\ttextVerticalAlign: 'top' | 'center' | 'bottom'\n    // textDecoration\tstring\t'none'\t文本装饰（下划线等）\ttextDecoration: 'none' | 'underline' | 'line-through'\n    // textOverflow\tstring\t'ellipsis'\t文本内容超出控件时的省略样式\ttextOverflow: 'clip' | 'ellipsis'\n    // textLineClamp\tnumber\t0（无限制）\t文本行数\ttextLineClamp: 1\n\n    textAlign?: string\n    textVerticalAlign?: string\n    textDecoration?: string\n    textOverflow?: string\n    textLineClamp?: number\n\n    // letterSpacing\tnumber\t0\t字间距（标准字体大小的倍数，单位是em）\tletterSpacing: 0.5\n    // lineSpacingMulti\tnumber\t1\t行间距（倍数）\tlineSpacingMulti: 1.2\n\n    letterSpacing?: number\n    lineSpacingMulti?: number\n}\n\nexport class Text extends HummerElement {\n\n    /**\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"Text\", name, { ...props, viewId: id });\n        this._initAttributes({\n            textCopyEnable: false\n        });\n    }\n\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: TextStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n\n    //扩展样式属性\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n    /**\n     * 普通文本内容\n     */\n    get text() {\n        return this._getAttribute('text');\n    }\n\n    set text(value: string) {\n        this._setAttribute(\"text\", value);\n    }\n\n    public setElementText(text: string): void {\n        this.text = text;\n    }\n\n    /**\n     * 富文本内容\n     */\n    get richText() {\n        return this._getAttribute('richText');\n    }\n\n    set richText(value: any) {\n        this._setAttribute(\"richText\", value);\n    }\n\n\n    /**\n     * 是否支持长按复制功能\n     * 默认：false\n     */\n    get textCopyEnable() {\n        return this._getAttribute('textCopyEnable');\n    }\n\n    set textCopyEnable(value: boolean) {\n        this._setAttribute(\"textCopyEnable\", value);\n    }\n\n\n}","import { HummerElement } from \"../../HummerElement\"\nimport { ImageAttribute } from \"./ImageAttribute\"\nimport { HMEvent, ViewEvent } from \"../../HummerElement\"\nimport { FlexStyle } from \"../../Element\"\n\n\nexport interface ImageStyle extends FlexStyle {\n    resize?: string\n}\n\n\n/**\n * eventName:'__onImageLoad__'\n */\nexport interface ImageLoadEvent extends HMEvent<number> {\n\n\n    /**\n     * 加载状态\n     * \n     * state:0:成功，-1:失败，-2:取消.\n     */\n    state: number;\n\n    // 不需要支持所有路径，只需要支持：\n    \n    // 1、编译产物相对路径 （工程资源）\n    // 2、APP图片资源名称（id）---()\n    // 3、APP文件资源路径（assets）\n    // 4、APP存储文件，绝对路径（访问截图等）\n    // 5、http网络资源（线上资源）\n    // 6、base64（直接数据）\n    /**\n     * 资源类型（所加载的资源是:）\n     */\n    srcType: number;\n}\n\nexport class Image extends HummerElement {\n\n\n    private _onLoad?: ((srcType: number, isSuccess: boolean) => void) | Function | undefined;\n\n    /**\n    * \n    * @param id\n    * @param name \n    * @param props \n    */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"Image\", name, { ...props, viewId: id });\n        //设置默认属性值\n        this._initAttributes({\n            gifRepeatCount: 0\n        });\n\n        this.addEventListener(\"__onImageLoad__\", (event: ImageLoadEvent) => {\n            this.onImageOnLoad(event);\n        })\n    }\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: ImageStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n    \n    //扩展样式属性\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n\n    /**\n     * 普通图片\n     */\n    get src() {\n        return this._getAttribute(\"src\")\n    }\n\n    set src(value: string) {\n        this._setAttribute(\"src\", value);\n        this._removeAttribute(\"gifSrc\");\n    }\n\n    /**\n    * Gif图片\n    */\n    get gifSrc() {\n        return this._getAttribute(\"gifSrc\")\n    }\n\n    set gifSrc(value: string) {\n        this._setAttribute(\"gifSrc\", value);\n        this._removeAttribute(\"src\");\n    }\n\n    /**\n    * Gif播放次数\n    */\n    get gifRepeatCount() {\n        return this._getAttribute(\"gifRepeatCount\")\n    }\n\n    set gifRepeatCount(value: number) {\n        this._setAttribute(\"gifRepeatCount\", value);\n    }\n\n    /**\n    * 加载失败资源\n    */\n    get failedImage() {\n        return this._getAttribute(\"failedImage\")\n    }\n\n    set failedImage(value: string) {\n        this._setAttribute(\"failedImage\", value);\n    }\n\n    /**\n    * 占位资源\n    */\n    get placeholder() {\n        return this._getAttribute(\"placeholder\")\n    }\n\n    set placeholder(value: string) {\n        this._setAttribute(\"placeholder\", value);\n    }\n\n    /** \n    *资源加载结果\n    */\n    get onLoad(): ((srcType: number, isSuccess: boolean) => void) | Function | undefined {\n        return this._onLoad;\n    }\n\n    set onLoad(value: ((srcType: number, isSuccess: boolean) => void) | Function | undefined) {\n        this._onLoad = value;\n    }\n\n\n    /**\n     * 分发资源加载结果回调\n     * \n     * @param event @see \n     */\n    protected onImageOnLoad(event: ImageLoadEvent) {\n        if (this._onLoad) {\n            let isSuccess = false\n            if (event.state === 0) {\n                isSuccess = true\n            }\n\n            this._onLoad(event.srcType, isSuccess);\n        }\n    }\n\n    /**\n     * 加载资源\n     * \n     * @param src 资源\n     * @param listener 结果监听\n     */\n    public load(source: string | ImageAttribute, callback: ((srcType: number, isSuccess: boolean) => void) | Function | undefined) {\n        if (typeof source === 'string') {\n            this._setAttribute(\"src\", source);\n            this._removeAttribute(\"gifSrc\");\n        } else {\n            this._setAttribute(\"src\", source.src);\n            this._removeAttribute(\"gifSrc\");\n\n            if (!source.gifSrc && source.gifSrc !== \"\") {\n                this._setAttribute(\"gifSrc\", source.gifSrc);\n                this._removeAttribute(\"src\");\n            }\n            if (source.placeholder) {\n                this._setAttribute(\"placeholder\", source.placeholder);\n            }\n            if (source.failedImage) {\n                this._setAttribute(\"failedImage\", source.failedImage);\n            }\n            if (source.gifRepeatCount) {\n                this._setAttribute(\"gifRepeatCount\", source.gifRepeatCount);\n            }\n\n        }\n        this._onLoad = callback;\n    }\n\n    /**\n     * \n     * @param key \n     * @param value \n     * @returns \n     * \n     * 1、所有组件支持的属性都需要写 get set方法 兼容旧版本api使用。\n     * 2、对有额外处理的需要重新setAttribute方法，对tenon调用接口做补充，增加额外处理\n     */\n    public setAttribute(key: string, value: any): void {\n        switch (key) {\n            case 'src':\n                this.src = value;\n                return;\n            case 'gifSrc':\n                this.gifSrc = value;\n                return;\n\n        }\n        super.setAttribute(key, value);\n    }\n\n    /**\n    * 添加事件监听\n    * \n    * @param eventName \n    * @param eventListener   新增事件:input @see ImageLoadEvent\n    * @param useCapture \n    */\n    public override addEventListener(eventName: string, eventListener: (event: ImageLoadEvent | ViewEvent | any) => void | Function | EventListener, useCapture?: boolean | undefined): void {\n        super.addEventListener(eventName, eventListener, useCapture);\n    }\n\n\n\n}\n\n\n","import { EventListener } from \"../../EventTarget\";\nimport { HummerElement } from \"../../HummerElement\"\nimport { HMEvent, ViewEvent } from \"../../HummerElement\"\nimport { FlexStyle } from \"../../Element\"\n\n\nexport interface InputStyle extends FlexStyle {\n\n    /**\n     * 键盘可输入字符类型\n     * 默认:'default'\n     * \n     * \ttype: 'default' | 'number' | 'tel' | 'email' | 'password'\n     */\n    type?: string\n    /**\n     * 输入文本颜色\t\n     * 默认:系统默认\n     * \n     * color: '#000000'\n     */\n    color?: string\n    /**\n     * 占位提示文本颜色\n     * 默认:系统默认\n     * \n     * placeholderColor: '#999999'\n     */\n    placeholderColor?: string\n    /**\n     * 光标颜色\t\n     * 默认:系统默认\n     * \n     * cursorColor: '#007AFF'\n     */\n    cursorColor?: string\n    /**\n     * 文本对齐方式\t\n     * 默认:'left'\n     * \n     * textAlign: 'left' | 'center' | 'right'\n     */\n    textAlign?: string\n    /**\n     * 字体\t\n     * 默认:系统默认\n     * \n     * fontFamily: \"New Times Roma\"\n     */\n    fontFamily?: string\n    /**\n     * 字体大小\n     * 默认:16\n     * \n     * fontSize: 16 | '48px'\n     */\n    fontSize?: number | string\n    /**\n     * 最大输入长度\t\n     * 默认:0（无限制）\t\n     * \n     * maxLength: 10\n     */\n    maxLength?: number\n    /**\n     * 键盘输入结束按钮类型\t\n     * 默认:'done'\n     * \n     * returnKeyType: 'done' | 'go' | 'next' | 'search' | 'send'\n     */\n    returnKeyType?: string\n}\n\n\n\n/**\n * 文本输入事件\n * \n * eventName:'input'\n */\nexport interface InputEvent extends HMEvent<number> {\n\n    /**\n     * 输入状态\n     * \n     * state: 1 // began（输入框获得焦点时的回调）\n     * state: 2 // changed（输入框输入内容时的回调）\n     * state: 3 // ended（输入框失去焦点时的回调）\n     * state: 4 // confirmed（输入框完成输入时的回调）\n     */\n    state: number;\n    /**\n     * 输入文本\t\n     * \n     * text: 'xxx'\n     * \n     */\n    text: string\n}\n\n\nexport class Input extends HummerElement {\n\n\n    /**\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"Input\", name, { ...props, viewId: id });\n        this.addEventListener('input', (event: InputEvent) => {\n            this._setAttribute(\"text\", event.text, false);\n        });\n    }\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: InputStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n\n    //扩展样式属性\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n    /**\n     * 默认输入内容\n     */\n    get text() {\n        return this._getAttribute(\"text\")\n    }\n\n    set text(value: string) {\n        this._setAttribute(\"text\", value);\n    }\n\n    /**\n     * placeholder内容\n     */\n    get placeholder() {\n        return this._getAttribute(\"placeholder\")\n    }\n\n    set placeholder(value: string) {\n        this._setAttribute(\"placeholder\", value);\n    }\n\n\n    /**\n     * 是否处于激活状态\n     */\n    get focused() {\n        return this._getAttribute(\"focused\")\n    }\n\n    set focused(value: boolean) {\n        this._setAttribute(\"focused\", value);\n    }\n\n\n    /**\n     * 添加事件监听\n     * \n     * @param eventName \n     * @param eventListener   新增事件:input @see InputEvent\n     * @param useCapture \n     */\n    public override addEventListener(eventName: string, eventListener: (event: InputEvent | ViewEvent | any) => void | Function | EventListener, useCapture?: boolean | undefined): void {\n        super.addEventListener(eventName, eventListener, useCapture);\n    }\n\n}\n\n","import { HummerElement } from \"../../HummerElement\"\nimport { View } from '../View'\nimport { HMEvent, ViewEvent } from \"../../HummerElement\"\nimport { FlexStyle } from \"../../Element\"\n\n\n// TODO 后续待修改\nexport interface ListStyle extends FlexStyle {\n    mode?: string\n    scrollDirection?: string\n    column?: number\n    lineSpacing?: number | string\n    itemSpacing?: number | string\n    leftSpacing?: number | string\n    rightSpacing?: number | string\n    topSpacing?: number | string\n    bottomSpacing?: number | string\n}\n\n// TODO 后续待修改\nexport enum ListEventState {\n    normal = 0, // normal\n    beganDrag,\n    scroll,\n    stop,\n    endDrag,\n}\n\n\n// TODO 后续待修改\nexport interface ListEvent extends HMEvent<ListEventState> {\n    offsetX: number\n    offsetY: number\n    dx: number\n    dy: number\n}\n\nexport class List extends HummerElement {\n\n\n    private _onRegister?: Function = undefined;\n    private _onCreate?: Function = undefined;\n    private _onUpdate?: Function = undefined; // todo 这三个后续需根据实际类型修改\n\n    private _onRefresh?: Function = undefined;\n    private _onLoadMore?: Function = undefined;\n\n\n    /**\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"List\", name, { ...props, viewId: id });\n        this.addEventListener(\"onRegister\", (event: ListEvent) => {\n            this.onDispatch(\"onRegister\", event);\n        })\n        this.addEventListener(\"onCreate\", (event: ListEvent) => {\n            this.onDispatch(\"onCreate\", event);\n        })\n        this.addEventListener(\"onUpdate\", (event: ListEvent) => {\n            this.onDispatch(\"onUpdate\", event);\n        })\n        this.addEventListener(\"onRefresh\", (event: ListEvent) => {\n            this.onDispatch(\"onRefresh\", event);\n        })\n        this.addEventListener(\"onLoadMore\", (event: ListEvent) => {\n            this.onDispatch(\"onLoadMore\", event);\n        })\n\n\n\n    }\n\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: ListStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n\n    //扩展样式属性\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n\n    /**\n     * 分发资源加载结果回调\n     * \n     */\n    protected onDispatch(type: string, event: ListEvent, cell?: View) {\n        switch (type) {\n            case \"onRegister\":\n                if (this._onRegister) {\n                    this._onRegister(event);\n                }\n                break\n            case \"onCreate\":\n                if (this._onCreate) {\n                    this._onCreate(event);\n                }\n                break\n            case \"onUpdate\":\n                if (this._onUpdate) {\n                    this._onUpdate(event, cell);\n                }\n                break\n            case \"onRefresh\":\n                if (this._onRefresh) {\n                    this._onRefresh(event.state);\n                }\n                break\n            case \"onLoadMore\":\n                if (this._onLoadMore) {\n                    this._onLoadMore(event.state);\n                }\n                break\n            default:\n                break\n        }\n\n    }\n\n\n    /**\n     * 注册 cell 复用标识的回调\n     */\n    get onRegister() {\n        return this._getAttribute(\"onRegister\")\n    }\n\n    set onRegister(value: (position: number) => number) {\n        this._setAttribute(\"onRegister\", value);\n        this._onRegister = value\n    }\n\n    /**\n     * 创建 cell 的回调\n     */\n    get onCreate() {\n        return this._getAttribute(\"onCreate\")\n    }\n\n    set onCreate(value: (type: number) => View) {\n        let _onCreate = (type: number) => {\n            return value(type).getOriginObject()\n        }\n        this._setAttribute(\"onCreate\", _onCreate);\n        this._onCreate = value\n    }\n\n    /**\n     * 更新 cell 的回调\n     */\n    get onUpdate() {\n        return this._getAttribute(\"onUpdate\")\n    }\n\n    set onUpdate(value: (position: number, cell: View) => void) {\n        this._setAttribute(\"onUpdate\", value);\n        this._onUpdate = value\n    }\n\n\n    /**\n    * 下拉刷新时展示的视图\n    */\n    get refreshView() {\n        return this._getAttribute(\"refreshView\")\n    }\n\n    set refreshView(value: View) {\n        this._setAttribute(\"refreshView\", value.getOriginObject());\n    }\n\n    /**\n    * 上拉加载更多时展示的视图\n    */\n    get loadMoreView() {\n        return this._getAttribute(\"loadMoreView\")\n    }\n\n    set loadMoreView(value: View) {\n        this._setAttribute(\"loadMoreView\", value.getOriginObject());\n    }\n\n\n    /**\n    * 下拉刷新时触发的回调\n    */\n    get onRefresh() {\n        return this._getAttribute(\"onRefresh\")\n    }\n\n    set onRefresh(value: (state: number) => void) {\n        this._setAttribute(\"onRefresh\", value);\n        this._onRefresh = value\n    }\n\n    /**\n    * 上拉加载时触发的回调\n    */\n    get onLoadMore() {\n        return this._getAttribute(\"onLoadMore\")\n    }\n\n    set onLoadMore(value: (state: number) => void) {\n        this._setAttribute(\"onLoadMore\", value);\n        this._onLoadMore = value\n    }\n\n    /**\n    * 滑动时是否显示滚动条\n    */\n    get showScrollBar() {\n        return this._getAttribute(\"showScrollBar\")\n    }\n\n    set showScrollBar(value: boolean) {\n        this._setAttribute(\"showScrollBar\", value);\n    }\n\n\n    /**\n    * 滑动到边缘时是否有回弹效果\n    */\n    get bounces() {\n        return this._getAttribute(\"bounces\")\n    }\n\n    set bounces(value: boolean) {\n        this._setAttribute(\"bounces\", value);\n    }\n\n\n    /**\n     * 刷新列表\n     * @param count 列数 cell 数量\n     */\n    refresh(count: number) {\n        this.call(\"refresh\", count);\n    }\n\n\n    /**\n    * 滚动到指定位置\n    * @param position 要滚动到的位置\n    */\n    scrollToPosition(position: number) {\n        this.call(\"scrollToPosition\", position);\n    }\n\n    /**\n     * 滚动到指定坐标（单位：dp/pt/hm/px）\n     */\n    scrollTo(x: number | string, y: number | string) {\n        this.call(\"scrollTo\", x, y);\n    }\n\n    /**\n    * 滚动到指定坐标（单位：dp/pt/hm/px）\n    */\n    scrollBy(dx: number | string, dy: number | string) {\n        this.call(\"scrollBy\", dx, dy);\n    }\n\n\n\n    /**\n    * 结束下拉刷新\n    */\n    stopPullRefresh() {\n        this.call(\"stopPullRefresh\");\n    }\n\n\n    /**\n     * 结束上拉加载更多\n     * \n     * @param enable 下次能否继续触发加载更多\n     */\n    stopLoadMore(enable: boolean) {\n        this.call(\"stopLoadMore\", enable);\n    }\n\n\n    /**\n     * 添加事件监听\n     * \n     * @param eventName \n     * @param eventListener   新增事件:input @see ListEvent\n     * @param useCapture \n     */\n    public override addEventListener(eventName: string, eventListener: (event: ListEvent | ViewEvent | any) => void | Function | EventListener, useCapture?: boolean | undefined): void {\n        super.addEventListener(eventName, eventListener, useCapture);\n    }\n\n\n\n}","import { HummerElement } from \"../../HummerElement\"\nimport { HMObject } from \"../../HMObject\"\nimport { Element } from \"../../Element\"\nimport { FlexStyle } from \"../../Element\"\n\n\n\nexport interface ViewPagerStyle extends FlexStyle {\n    /**\n     * 整个ViewPager的圆角半径\n     * 默认值：0\n     */\n    borderRadius?: number | string;\n    /**\n     * 两个page之间的距离\n     * 默认值：0\n     */\n    itemSpacing?: number | string;\n    /**\n     * 正中间的page离手机边缘的距离\n     * 默认值：0\n     */\n    edgeSpacing?: number | string;\n    /**\n     * 是否可以无限循环\t\n     * 默认值：false\n     */\n    canLoop?: boolean;\n    /**\n     * 是否自动播放\n     * 默认值：false\n     */\n    autoPlay?: boolean;\n\n    /**\n     * 自动轮播的时间间隔，单位ms（0时autoPlay失效）\n     * 默认值：0\n     */\n    loopInterval?: number;\n    /**\n     * 当前元素前后两个的缩放比例\n     * 默认值：0.85\n     */\n    scaleFactor?: number;\n    /**\n     * \t当前元素前后两个的透明度\n     *  默认值：0.5\t\n     */\n    alphaFactor?: number;\n}\n\n/**\n * ViewPager 组件\n * //TODO 目前使用API仅支持鸿蒙，多线程版本中不适用（不能同步返回组件） \n */\nexport class ViewPager extends HummerElement {\n\n    /**\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"ViewPager\", name, { ...props, viewId: id });\n    }\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: ViewPagerStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n\n    //扩展样式属性\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n    /**\n     * 默认输入内容\n     */\n    get data() {\n        return this._getAttribute(\"data\")\n    }\n\n    set data(value: string) {\n        this._setAttribute(\"data\", value);\n    }\n\n    /**\n     * 设置当前显示的页面\n     *\n     * @param position 当前显示页面的位置\n     */\n    public setCurrentItem(position: number) {\n        this.call(\"setCurrentItem\", position);\n    }\n\n    /**\n     * 设置ViewPager翻页时的回调\n     *\n     * @param callback 回调。参数：current:当前位置； total:item总个数\n     */\n    public onPageChange(callback: (current: number, total: number) => void) {\n        this.call(\"onPageChange\", callback);\n    }\n    /**\n     * 设置ViewPager页面被点击的回调\n     *\n     * @param callback 回调。参数：参数position:页面的位置\n     */\n    public onItemClick(callback: (position: number) => void) {\n        this.call(\"onItemClick\", callback);\n    }\n    /**\n     * 设置ViewPager页面自定义View创建和更新的回调\n     *\n     * @param callback 回调。参数position:当前位置；view:当前控件，当view为null时说明要创建view。最后返回view。\n     */\n    public onItemView(callback: (position: number, view: Element) => Element) {\n        this.call(\"onItemView\", (position: number, view: any) => {\n            let thisElement = HMObject.getShadowObject(view);\n            let element: Element = callback(position, thisElement);\n            return element && element.getOriginObject() || null;\n        });\n    }\n}\n\n","import { View } from \"../View\";\n\nexport class Refresh extends View {\n    /**\n     * 构造方法\n     * \n     * @param id \n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"View\", name, { ...props, viewId: id });\n    }\n}","import { View } from \"../View\";\n\nexport class LoadMore extends View {\n    /**\n     * 构造方法\n     * \n     * @param id \n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"View\", name, { ...props, viewId: id });\n    \n    }\n}","import { LifeCycleElement } from \"../../LifeCycleElement\"\nimport { View } from \"../View\"\nimport { HMEvent, ViewEvent } from \"../../HummerElement\"\nimport { HMObject } from \"src/HMObject\"\nimport { Refresh } from \"./RefreshView\"\nimport { LoadMore } from \"./LoadMoreView\"\n\n\n// state: 0 // normal（初始禁止状态）\n// state: 1 // began（开始滚动）\n// state: 2 // scroll（滚动中）\n// state: 3 // ended（停止滚动）\n// state: 4 // scroll_up（滚动过程中，手指抬起）\n\nexport enum ScrollEventState {\n    normal = 0,\n    beganDrag,\n    scroll,\n    stop,\n    endDrag,\n}\n\n/**\n * 滚动事件\n * \n * eventName:'scroll'\n */\nexport interface ScrollEvent extends HMEvent<ScrollEventState> {\n    /**\n     * x方向实际滚动偏移量（单位：dp或pt）\t\n     */\n    offsetX: number\n    /**\n     * y方向实际滚动偏移量（单位：dp或pt）\t\n     */\n    offsetY: number\n    /**\n     * x方向滚动与上一个事件的差值（单位：dp或pt）\t\n     */\n    dx: number\n    /**\n     * y方向滚动与上一个事件的差值（单位：dp或pt）\t\n     */\n    dy: number\n}\n\n\nexport class Scroller extends LifeCycleElement {\n\n    private _onScrollTop?: Function = undefined;\n    private _onScrollBottom?: Function = undefined;\n    private _onRefresh?: Function = undefined;\n    private _onLoadMore?: Function = undefined;\n\n\n    /**\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"Scroller\", name, { ...props, viewId: id });\n\n        this.addEventListener(\"onRefresh\", (event: ScrollEvent) => {\n            this.onDispatch(\"onRefresh\", event);\n        })\n        this.addEventListener(\"onLoadMore\", (event: ScrollEvent) => {\n            this.onDispatch(\"onLoadMore\", event);\n        })\n        this.addEventListener(\"onScrollTop\", () => {\n            this.onDispatch(\"onScrollTop\");\n        })\n        this.addEventListener(\"onScrollBottom\", () => {\n            this.onDispatch(\"onScrollBottom\");\n        })\n\n    }\n\n\n    /**\n     * 分发资源加载结果回调\n     * \n     */\n    protected onDispatch(type: string, event?: ScrollEvent) {\n        switch (type) {\n            case \"onRefresh\":\n                if (this._onRefresh) {\n                    this._onRefresh(event?.state, this);\n                }\n                break\n            case \"onLoadMore\":\n                if (this._onLoadMore) {\n                    this._onLoadMore(event?.state, this);\n                }\n                break\n            case \"onScrollTop\":\n                if (this._onScrollTop) {\n                    this._onScrollTop();\n                }\n                break\n            case \"onScrollBottom\":\n                if (this._onScrollBottom) {\n                    this._onScrollBottom();\n                }\n                break\n            default:\n                break\n        }\n\n    }\n\n\n    /**\n    * 下拉刷新时展示的视图\n    */\n    get refreshView(): View | undefined {\n        let view = this._getAttribute(\"refreshView\");\n        if (view) {\n            return HMObject.getShadowObject(view);\n        }\n        return undefined;\n    }\n\n    set refreshView(value: View | undefined) {\n        this._setAttribute(\"refreshView\", value?.getOriginObject());\n    }\n\n    /**\n    * 上拉加载更多时展示的视图\n    */\n    get loadMoreView(): View | undefined {\n        let view = this._getAttribute(\"loadMoreView\");\n        if (view) {\n            return HMObject.getShadowObject(view);\n        }\n        return undefined;\n    }\n\n    set loadMoreView(value: View | undefined) {\n        this._setAttribute(\"loadMoreView\", value?.getOriginObject());\n    }\n\n\n    /**\n     * 上拉加载时触发的回调\n     */\n    get onLoadMore() {\n        return this._getAttribute(\"onLoadMore\")\n    }\n\n    set onLoadMore(value: (state: number) => void) {\n        this._onLoadMore = value\n        this._setAttribute(\"onLoadMore\", value);\n    }\n\n\n    /**\n     * 下拉刷新时触发的回调\n     */\n    get onRefresh() {\n        return this._getAttribute(\"onRefresh\")\n    }\n\n    set onRefresh(value: (state: number) => void) {\n        this._onRefresh = value\n        this._setAttribute(\"onRefresh\", value);\n    }\n\n\n\n    /**\n     * 滑动到边缘时是否有回弹效果\n     */\n    get bounces() {\n        return this._getAttribute(\"bounces\")\n    }\n\n    set bounces(value: boolean) {\n        this._setAttribute(\"bounces\", value);\n    }\n\n    /**\n     * 滑动时是否显示滚动条\n     */\n    get showScrollBar() {\n        return this._getAttribute(\"showScrollBar\")\n    }\n\n    set showScrollBar(value: boolean) {\n        this._setAttribute(\"showScrollBar\", value);\n    }\n\n\n    /**\n     * enableLoadMore\n     */\n    get enableLoadMore() {\n        return this._getAttribute(\"enableLoadMore\")\n    }\n\n    set enableLoadMore(value: boolean) {\n        this._setAttribute(\"enableLoadMore\", value);\n    }\n\n    /**\n     * enableRefresh\n     */\n    get enableRefresh() {\n        return this._getAttribute(\"enableRefresh\")\n    }\n\n    set enableRefresh(value: boolean) {\n        this._setAttribute(\"enableRefresh\", value);\n    }\n\n\n    /**\n     * 滚动到指定坐标（单位：dp/pt/hm/px）\n     */\n    scrollTo(x: number | string, y: number | string) {\n        this.call(\"scrollTo\", x, y);\n    }\n\n    /**\n    * 滚动到指定坐标（单位：dp/pt/hm/px）\n    */\n    scrollBy(dx: number | string, dy: number | string) {\n        this.call(\"scrollBy\", dx, dy);\n    }\n\n\n    /**\n    * 滚动到顶部\n    */\n    scrollToTop() {\n        this.call(\"scrollToTop\");\n    }\n\n\n    /**\n    * 滚动到底部\n    */\n    scrollToBottom() {\n        this.call(\"scrollToBottom\");\n    }\n\n\n\n    /**\n    * 滚动到顶部事件监听\n    */\n    setOnScrollToTopListener(callback: () => void) {\n        this._onScrollTop = callback\n    }\n\n    /**\n     * 滚动到底部事件监听\n     */\n    setOnScrollToBottomListener(callback: () => void) {\n        this._onScrollBottom = callback\n    }\n\n\n\n    /**\n    * 结束下拉刷新\n    */\n    stopPullRefresh() {\n        this.call(\"stopPullRefresh\");\n    }\n\n\n    /**\n     * 结束上拉加载更多\n     * \n     * @param enable 下次能否继续触发加载更多\n     */\n    stopLoadMore(enable: boolean) {\n        this.call(\"stopLoadMore\", enable);\n    }\n\n\n    /**\n     * 添加事件监听\n     * \n     * @param eventName \n     * @param eventListener   滚动事件:scroll @see ScrollEvent\n     * @param useCapture \n     */\n    public override addEventListener(eventName: string, eventListener: (event: ScrollEvent | ViewEvent | any) => void | Function | EventListener, useCapture?: boolean | undefined): void {\n        switch (eventName) {\n            case \"refresh\":\n                this.onRefresh = eventListener\n                break;\n            case \"loadMore\":\n                this.onLoadMore = eventListener\n                break;\n            case \"scrollToTop\":\n                this.setOnScrollToTopListener(eventListener as () => void)\n                break;\n            case \"scrollToBottom\":\n                this.setOnScrollToBottomListener(eventListener as () => void)\n                break;  \n            default:\n                super.addEventListener(eventName, eventListener, useCapture);\n                break;\n        }\n    }\n\n    insertBefore(child: any, anchor: any) {\n        if(!child||!anchor){\n            return\n        }\n        // child is refresh\n        if(child instanceof Refresh) {\n            this.refreshView = child\n        } else if (child instanceof LoadMore) {\n            this.loadMoreView = child\n        } else {\n            // other node\n            super.insertBefore(child, anchor)\n        }\n\n    }\n    \n    \n    /**\n     * \n     * @param child 在末尾添加节点\n     */\n    appendChild(child: any) {\n        if(!child){\n            return\n        }\n        // child is refresh\n        if(child instanceof Refresh) {\n            this.refreshView = child\n        } else if (child instanceof LoadMore) {\n            this.loadMoreView = child\n        } else {\n            // other node\n            super.appendChild(child)\n        }\n    }\n}","import { HummerElement } from \"../../HummerElement\"\nimport { FlexStyle } from \"../../Element\"\n\n\n\n\n\nexport interface TextAreaStyle extends FlexStyle {\n\n    // type\tstring\t'default'\t键盘可输入字符类型\ttype: 'default' | 'number' | 'tel' | 'email' | 'password'\n    // color\tstring\t系统默认\t输入文本颜色\tcolor: '#000000'\n    // placeholderColor\tstring\t系统默认\t占位提示文本颜色\tplaceholderColor: '#999999'\n    // cursorColor\tstring\t系统默认\t光标颜色\tcursorColor: '#007AFF'\n\n    type?: string\n    color?: string\n    placeholderColor?: string\n    cursorColor?: string\n\n\n    // textAlign\tstring\t'left'\t文本对齐方式\ttextAlign: 'left' | 'center' | 'right'\n    // fontFamily\tstring\t系统默认\t字体\tfontFamily: \"New Times Roma\"\n    // fontSize\tnumber|string\t16\t字体大小\tfontSize: 16 | '48px'\n\n    textAlign?: string\n    fontFamily?: string\n    fontSize?: number | string\n\n    // maxLength\tnumber\t0（无限制）\t最大输入长度\tmaxLength: 10\n    // returnKeyType\tstring\t'done'\t键盘输入结束按钮类型\treturnKeyType: 'done' | 'go' | 'next' | 'search' | 'send'\n    // textLineClamp\tnumber\t0（无限制）\t最大输入行数\ttextLineClamp: 1 // 单行输入\n\n    maxLength?: number\n    returnKeyType?: string\n    textLineClamp?: number\n}\n\n\nexport class TextArea extends HummerElement {\n\n\n    /**\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"TextArea\", name, { ...props, viewId: id });\n        this._initAttributes({\n            text: '',\n            placeholder: '',\n            focused: false\n        });\n        this.addEventListener('input', (event: any) => {\n            this._setAttribute(\"text\", event.text, false);\n        });\n    }\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: TextAreaStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n\n    //扩展样式属性\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n    /**\n     * 默认输入内容\n     */\n    get text() {\n        return this._getAttribute('text');\n    }\n\n    set text(value: string) {\n        this._setAttribute(\"text\", value);\n    }\n\n    /**\n     * placeholder内容\n     */\n    get placeholder() {\n        return this._getAttribute('placeholder');\n    }\n\n    set placeholder(value: string) {\n        this._setAttribute(\"placeholder\", value);\n    }\n\n\n    /**\n     * 是否处于激活状态\n     */\n    get focused() {\n        return this._getAttribute('focused');\n    }\n\n    set focused(value: boolean) {\n        this._setAttribute(\"focused\", value);\n    }\n\n\n\n\n}","import { EventTarget } from \"../EventTarget\"\n\nexport class HummerComponent extends EventTarget {\n\n\n    public constructor(tag: string, props: any, viewType: boolean = true) {\n        super(tag, true, { ...props, viewType: viewType })\n        this.bindEventTarget();\n    }\n\n\n\n}","import { HummerComponent } from \"../../HummerComponent\"\nimport { Element } from \"../../Element\"\n\nconst HUMMER = __Hummer__;\n\n\n\n// platform\tstring\t平台类型\t'iOS' | 'Android' | 'Web'\n// osVersion\tstring\t平台系统版本号\t'14.0' | '10'\n// appVersion\tstring\tApp版本号\t'1.0'\n// appName\tstring\tApp名字\t'Hummer'\n// statusBarHeight\tnumber\t状态栏高度（单位：dp或pt）\t44\n// safeAreaBottom\tnumber\tiOS安全区域高度（单位：dp或pt）（Android可忽略）\t34\n// deviceWidth\tnumber\t设备宽度（单位：dp或pt）\t414\n// deviceHeight\tnumber\t设备高度（单位：dp或pt）\t896\n// availableWidth\tnumber\t可用范围宽度（单位：dp或pt）\t414\n// availableHeight\tnumber\t可用范围高度（单位：dp或pt）\t852\n// scale\tnumber\t像素缩放比例\t3\n\nexport type Env = {\n    platform: string,\n    osVersion: string,\n    appVersion: string,\n    appName: string,\n    statusBarHeight: number\n    safeAreaBottom: number\n    deviceWidth: number\n    deviceHeight: number\n    availableWidth: number\n    availableHeight: number\n    scale: number\n}\n\n// url【必填】\tstring\t页面Url，以 scheme://xxx/yyy 的形式传入\n// params\tObject\t页面间传递的参数\n// animated\tboolean\t是否需要转场动画（默认是true）\n// id\tstring\t页面唯一标示，可以不传，当需要pop到该页面时，需要指定page的id\n// closeSelf\tboolean\t打开页面时是否关闭自身\n\nexport type PageInfo = {\n    id: string;\n\n    // url 格式:\n    // Hummer Bundle页面\thummer://home/index.js\n    // Hummer Url页面\thttp://xxx.xxx.xxx.xxx:8000/index.js\n    // Hummer 相对路径页面\t./index.js\n    // H5 页面\thttps://hummer.didi.cn\n    // 自定义页面\tnative://album\n    // wechat://xxx/yyy\n    url: string;\n    animated: boolean;\n    params?: any;\n    closeSelf?: boolean;\n};\n\n\nexport class HummerApi extends HummerComponent {\n\n    private _rootElement: Element | undefined = undefined\n\n    public constructor(props: any = {}) {\n        super(\"Hummer\", props,false);\n    }\n\n    protected static newInstance(): HummerApi {\n        return new HummerApi();\n    }\n\n    protected static checkInstance() {\n        if (!HUMMER.__hummerApi__) {\n            HUMMER.__hummerApi__ = HummerApi.newInstance();\n        }\n    }\n\n    static get instance(): HummerApi {\n        return HUMMER.__hummerApi__\n    }\n\n    /**\n     * 获取全局env\n     *\n     */\n    static getEnv(): Env {\n        HummerApi.checkInstance();\n        return HummerApi.instance.getEnv();\n    }\n\n    protected getEnv(): Env {\n        return this.call(\"getEnv\");\n    }\n\n    /**\n     * 获取pageInfo\n     */\n    static getPageInfo(): PageInfo {\n        HummerApi.checkInstance();\n        return HummerApi.instance.getPageInfo();\n    }\n\n    protected getPageInfo(): PageInfo {\n        return this.call(\"getPageInfo\");\n    }\n\n\n\n    /**\n     * 设置setPageResult\n     *\n     */\n    static setPageResult(param: any) {\n        HummerApi.checkInstance();\n        return HummerApi.instance.setPageResult(param);\n    }\n\n    protected setPageResult(param: any) {\n        return this.call(\"setPageResult\", param);\n    }\n\n\n    static get rootElement() {\n        HummerApi.checkInstance();\n        return HummerApi.instance._rootElement;\n    }\n\n    static set rootElement(rootElement: Element | undefined) {\n        HummerApi.checkInstance();\n        HummerApi.instance._rootElement = rootElement;\n    }\n\n\n\n}","import { HummerComponent } from \"../../HummerComponent\"\n\nconst HUMMER = __Hummer__;\n\nexport class NotifyCenter extends HummerComponent {\n\n\n    public constructor(props: any = {}) {\n        super(\"NotifyCenter\", props);\n    }\n\n\n    protected static get instance(): NotifyCenter {\n        if (!HUMMER.__notifyCenter__) {\n            HUMMER.__notifyCenter__ = new NotifyCenter();\n        }\n        return HUMMER.__notifyCenter__\n    }\n\n    /**\n     * 添加事件监听\n     *\n     * @param event 事件名称\n     * @param callback 回调事件\n     */\n    public static addEventListener(event: string, callback: Function) {\n        NotifyCenter.instance.addEventListener(event, callback)\n    }\n\n    /**\n    * 移除事件监听\n    *\n    * @param event 事件名称\n    * @param callback 回调事件\n    */\n    public static removeEventListener(event: string, callback: Function) {\n        if (!callback) {\n            NotifyCenter.instance.call(\"removeAllEventListener\", event)\n        } else {\n            NotifyCenter.instance.removeEventListener(event, callback)\n        }\n\n    }\n\n\n\n    /**\n     * 触发事件\n     *\n     * @param event 事件名称\n     * @param value 消息内容\n     */\n    public static triggerEvent(eventName: string, value: Record<string, any>) {\n        let event = {\n            type: eventName,\n            state: 0,\n            timestamp: new Date().getTime(),\n            value: value,\n        };\n        NotifyCenter.instance.call(\"triggerEvent\", eventName, event);\n    }\n\n    /**\n     * 重新获取实际传递的数据\n     * @param eventName \n     * @param event \n     * @returns \n     */\n    protected onHandleReceiveEvent(eventName: string, event: any): any {\n        if (event) {\n            return event.value;\n        }\n        return undefined;\n    }\n\n\n\n}","import { HummerElement } from \"../../HummerElement\"\n\n\n/**\n * TODO 废弃组件\n */\nexport class Loading extends HummerElement {\n\n\n    /**\n     * 构造方法\n     * \n     * @param id \n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"Loading\", name, { ...props, viewId: id });\n    \n    }\n\n\n}","import { HummerElement, HMEvent, ViewEvent } from \"../../HummerElement\"\nimport { FlexStyle } from \"../../Element\"\n\n\n\nexport interface SwitchStyle extends FlexStyle {\n    /**\n     * 打开时的颜色\t\n     * 默认:系统默认\n     * \n     * onColor: '#FF0000'\n     */\n    onColor?: string,\n    /**\n     * 关闭时的颜色\t\n     * 默认:系统默认\n     * \n     * offColor: '#999999'\n     */\n    offColor?: string,\n    /**\n     * 滑块颜色\t\n     * 默认:系统默认\n     * \n     * thumbColor: '#0000FF'\n     */\n    thumbColor?: string\n}\n\n\n/**\n * 文本输入事件\n * \n * eventName:'switch'\n */\nexport interface SwitchEvent extends HMEvent<number> {\n\n    /**\n     * 选择状态（0:未选中或1:选中）\t\n     * \n     * state: 1\n     */\n    state: number\n\n}\n\n\nexport class Switch extends HummerElement {\n\n\n    /**\n     * 构造方法\n     * \n     * @param id \n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"Switch\", name, { ...props, viewId: id });\n    }\n\n\n    //扩展样式属性：有代理时通过代理处理\n    public set style(value: SwitchStyle | Record<string, any>) {\n        this.setStyle(value, false);\n    }\n\n    // FIXME: 鸿蒙下样式问题\n    public get style() {\n        return this.getStyle() || {};\n    }\n\n    /**\n     * 扩展属性\n     * 默认值:false\n     */\n    set checked(value: boolean) {\n        this._setAttribute(\"checked\", value);\n    }\n\n\n    get checked(): boolean {\n        return this._getAttribute('checked');\n    }\n\n\n    /**\n     * 添加事件监听\n     * \n     * @param eventName \n     * @param eventListener   滚动事件:scroll @see SwitchEvent\n     * @param useCapture \n     */\n    public override addEventListener(eventName: string, eventListener: (event: SwitchEvent | ViewEvent | any) => void | Function | EventListener, useCapture?: boolean | undefined): void {\n        super.addEventListener(eventName, eventListener, useCapture);\n    }\n\n\n}","import { LifeCycleElement } from \"../../LifeCycleElement\"\nimport { ViewEvent } from \"../../HummerElement\"\nimport { ScrollEvent } from \"../../components/Scroller\"\n\n// state: 0 // normal（初始禁止状态）\n// state: 1 // began（开始滚动）\n// state: 2 // scroll（滚动中）\n// state: 3 // ended（停止滚动）\n// state: 4 // scroll_up（滚动过程中，手指抬起）\n\n// export enum ScrollEventState {\n//     normal = 0,\n//     beganDrag,\n//     scroll,\n//     stop,\n//     endDrag,\n// }\n\n// export interface ScrollEvent extends HMEvent<ScrollEventState> {\n//     /**\n//      * x方向实际滚动偏移量（单位：dp或pt）\t\n//      */\n//     offsetX: number\n//     /**\n//      * y方向实际滚动偏移量（单位：dp或pt）\t\n//      */\n//     offsetY: number\n//     /**\n//      * x方向滚动与上一个事件的差值（单位：dp或pt）\t\n//      */\n//     dx: number\n//     /**\n//      * y方向滚动与上一个事件的差值（单位：dp或pt）\t\n//      */\n//     dy: number\n// }\n\n\nexport class HorizontalScroller extends LifeCycleElement {\n\n    private _onScrollTop?: Function = undefined;\n    private _onScrollBottom?: Function = undefined;\n\n    /**\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"HorizontalScroller\", name, { ...props, viewId: id });\n\n        this.addEventListener(\"onScrollTop\", () => {\n            this.onDispatch(\"onScrollTop\");\n        })\n        this.addEventListener(\"onScrollBottom\", () => {\n            this.onDispatch(\"onScrollBottom\");\n        })\n\n    }\n\n\n    /**\n     * 分发资源加载结果回调\n     * \n     */\n    protected onDispatch(type: string, event?: ScrollEvent) {\n        switch (type) {\n            case \"onScrollTop\":\n                if (this._onScrollTop) {\n                    this._onScrollTop();\n                }\n                break\n            case \"onScrollBottom\":\n                if (this._onScrollBottom) {\n                    this._onScrollBottom();\n                }\n                break\n            default:\n                break\n        }\n\n    }\n\n    /**\n     * 滑动到边缘时是否有回弹效果\n     */\n    get bounces() {\n        return this._getAttribute(\"bounces\")\n    }\n\n    set bounces(value: boolean) {\n        this._setAttribute(\"bounces\", value);\n    }\n\n    /**\n     * 滑动时是否显示滚动条\n     */\n    get showScrollBar() {\n        return this._getAttribute(\"showScrollBar\")\n    }\n\n    set showScrollBar(value: boolean) {\n        this._setAttribute(\"showScrollBar\", value);\n    }\n\n\n    /**\n     * 滚动到指定坐标（单位：dp/pt/hm/px）\n     */\n    scrollTo(x: number | string, y: number | string) {\n        this.call(\"scrollTo\", x, y);\n    }\n\n    /**\n    * 滚动到指定坐标（单位：dp/pt/hm/px）\n    */\n    scrollBy(dx: number | string, dy: number | string) {\n        this.call(\"scrollBy\", dx, dy);\n    }\n\n\n    /**\n    * 滚动到顶部\n    */\n    scrollToTop() {\n        this.call(\"scrollToTop\");\n    }\n\n\n    /**\n    * 滚动到底部\n    */\n    scrollToBottom() {\n        this.call(\"scrollToBottom\");\n    }\n\n\n\n    /**\n    * 滚动到顶部事件监听\n    */\n    setOnScrollToTopListener(callback: () => void) {\n        this._onScrollTop = callback\n    }\n\n    /**\n     * 滚动到底部事件监听\n     */\n    setOnScrollToBottomListener(callback: () => void) {\n        this._onScrollBottom = callback\n    }\n\n    updateContentSize() {\n\n    }\n\n    /**\n     * 添加事件监听\n     * \n     * @param eventName \n     * @param eventListener   滚动事件:scroll @see ScrollEvent\n     * @param useCapture \n     */\n    public override addEventListener(eventName: string, eventListener: (event: ScrollEvent | ViewEvent | any) => void | Function | EventListener, useCapture?: boolean | undefined): void {\n        super.addEventListener(eventName, eventListener, useCapture);\n    }\n\n}","const { document: _Document_ } = __Hummer__\n\n\nimport { Element } from \"../Element\"\nimport { HummerElement } from \"../HummerElement\"\nimport { Anchor } from \"../components/Anchor\"\nimport { Button } from \"../components/Button\"\nimport { Canvas } from \"../components/Canvas\"\nimport { View } from \"../components/View\"\nimport { Text } from \"../components/Text\"\nimport { Image } from \"../components/Image\"\nimport { Input } from \"../components/Input\"\nimport { List } from \"../components/List\"\nimport { ViewPager } from \"../components/ViewPager\"\nimport { Scroller } from \"../components/Scroller\"\nimport { TextArea } from \"../components/TextArea\"\nimport { HummerApi, Env, PageInfo } from \"../module/HummerApi\"\nimport { NotifyCenter } from \"../module/NotifyCenter\"\nimport { Loading } from \"src/components/Loading\"\nimport { Switch } from \"src/components/Switch\"\nimport { HorizontalScroller } from \"src/components/HorizontalScroller\"\nimport { Refresh } from \"src/components/Scroller/RefreshView\"\nimport { LoadMore } from \"src/components/Scroller/LoadMoreView\"\n\n\nexport class Hummer {\n\n    private static __elementFactor__: Record<string, Function> = {}\n\n    public static get env(): Env {\n        return HummerApi.getEnv()\n    }\n\n    public static get notifyCenter(): any {\n        return NotifyCenter\n    }\n\n\n    public static get pageInfo(): PageInfo {\n        return HummerApi.getPageInfo()\n    }\n\n    public static set pageResult(param: any) {\n        HummerApi.setPageResult(param)\n    }\n\n    /**\n     * 根据标签名称创建Element实例\n     * \n     * 备注：提供给Tenon框架使用\n     * @param tag 标签名称\n     * @returns 元素实例，如果找不到返回undefined\n     */\n    public static createElement(tag: string): HummerElement | undefined {\n        switch (tag) {\n            case \"anchor\":\n                return new Anchor();\n            case \"view\":\n                return new View();\n            case \"text\":\n                return new Text();\n            case \"image\":\n                return new Image();\n            case \"button\":\n                return new Button();\n            case \"canvas\":\n                return new Canvas();\n            case \"list\":\n                return new List();\n            case \"viewpager\":\n                return new ViewPager();\n            case \"scroller\":\n                return new Scroller();\n            case \"refresh\":\n                return new Refresh();\n            case \"loadmore\":\n                return new LoadMore();\n            case \"horizontalscroller\":\n                return new HorizontalScroller();\n            case \"switch\":\n                return new Switch();\n            case \"loadin\":\n                return new Loading();\n            case \"input\":\n                return new Input();\n            case \"textarea\":\n                return new TextArea();\n        }\n        return Hummer.createElementFromFactor(tag);\n    }\n\n    /**\n     * 创建注册的组件\n     * \n     * @param tag \n     * @returns \n     */\n    public static createElementFromFactor(tag: string): HummerElement | undefined {\n        let factor = Hummer.__elementFactor__[tag];\n        if (factor) {\n            return factor();\n        }\n        return undefined;\n    }\n\n    /**\n     * 注册组件\n     * \n     * @param tag \n     * @param factor \n     */\n    public static register(tag: string, factor: () => HummerElement) {\n        Hummer.__elementFactor__[tag] = factor;\n    }\n\n    /**\n     * 渲染页面\n     * \n     * @param element 页面视图根节点\n     */\n    public static render(element: Element) {\n        HummerApi.rootElement = element;\n        _Document_.render(element.getOriginObject());\n    }\n\n\n    /**\n     * 获取当前页面根节点视图元素\n     * \n     * @returns 返回元素实例\n     */\n    public static getRootView() {\n        return HummerApi.rootElement;\n    }\n\n\n}\n\n","/**\n * BasicAnimation 基础动画\n */\nexport class BasicAnimation {\n\n    public value: number | string | Record<string, any> = '';\n    public duration: number = 0;\n    public delay: number = 0;\n    public repeatCount: number = 1;\n    public easing: string = 'ease';\n    public key: string = '__default__';\n\n    protected type: string = 'basic';\n    protected property: string = 'position';\n\n    //使用双下划线开始和结尾避免被falcon引擎处理 eg:\"__***__\"\n    private __startFunc__: Function | undefined = undefined;\n\n    //使用双下划线开始和结尾避免被falcon引擎处理 eg:\"__***__\"\n    private __endFunc__: Function | undefined = undefined;\n\n    private __startCallback__: Function = (event: any) => {\n        if (this.__startFunc__ && (event == undefined || event.key == this.key)) {\n            this.__startFunc__();\n        }\n    }\n\n    private __endCallback__: Function = (event: any) => {\n        if (this.__endFunc__ && (event == undefined || event.key == this.key)) {\n            this.__endFunc__();\n        }\n    }\n\n\n    public constructor(property: any) {\n        this.property = property\n    }\n\n\n    public get startCallback(): Function {\n        return this.__startCallback__;\n    }\n\n\n    public get endCallback(): Function {\n        return this.__endCallback__;\n    }\n\n    private _setOnEventListener_(event: string, callback: Function) {\n        switch (event) {\n            case 'start':\n                this.__startFunc__ = callback;\n                break;\n            case 'end':\n                this.__endFunc__ = callback;\n                break;\n        }\n    }\n\n\n    /**\n     * 动画执行开始或结束时的回调\n     *\n     * @param event 事件类型（'start' 或 'end'）\n     * @param eventListener 事件回调\n     */\n    public on(event: string, eventListener: Function) {\n        this._setOnEventListener_(event, eventListener)\n    }\n\n\n}","/**\n * \n */\ntype Keyframe = {\n    value: number | string | Record<string, any>\n    percent: number\n}\n\n/**\n * KeyframeAnimation 帧动画\n */\nexport class KeyframeAnimation {\n\n    public keyframes: Array<Keyframe> = [];\n    public duration: number = 0;\n    public delay: number = 0;\n    public repeatCount: number = 1;\n    public easing: string = 'ease';\n    public key: string = '__default__';\n\n    protected type: string = 'keyframe';\n    protected property: string = 'position';\n\n    //使用双下划线开始和结尾避免被falcon引擎处理 eg:\"__***__\"\n    private __startFunc__: Function | undefined = undefined;\n    //使用双下划线开始和结尾避免被falcon引擎处理 eg:\"__***__\"\n    private __endFunc__: Function | undefined = undefined;\n\n    private __startCallback__: Function = (event: any) => {\n        if (this.__startFunc__ && (event == undefined ||event.key == this.key)) {\n            this.__startFunc__();\n        }\n    }\n\n    private __endCallback__: Function = (event: any) => {\n        if (this.__endFunc__  && (event == undefined ||event.key == this.key)) {\n            this.__endFunc__();\n        }\n    }\n\n\n    public constructor(property: any) {\n        this.property = property\n    }\n\n\n    public get startCallback(): Function {\n        return this.__startCallback__;\n    }\n\n\n    public get endCallback(): Function {\n        return this.__endCallback__;\n    }\n\n    private _setOnEventListener_(event: string, callback: Function) {\n        switch (event) {\n            case 'start':\n                this.__startFunc__ = callback;\n                break;\n            case 'end':\n                this.__endFunc__ = callback;\n                break;\n        }\n    }\n\n\n    /**\n     * 动画执行开始或结束时的回调\n     *\n     * @param event 事件类型（'start' 或 'end'）\n     * @param eventListener 事件回调\n     */\n    public on(event: string, eventListener: Function) {\n        this._setOnEventListener_(event, eventListener)\n    }\n\n\n}","import { Canvas } from \"../Canvas\"\n\n\nexport class CanvasView extends Canvas {\n\n\n\n    /**\n     * CanvasView 与 Canvas同兼容旧Hummer\n     * \n     * @param id\n     * @param name \n     * @param props \n     */\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(id, name, props);\n    }\n\n\n}","import { HummerComponent } from \"../../HummerComponent\"\n\nconst HUMMER = __Hummer__;\n\nexport class Memory extends HummerComponent {\n\n    public constructor(props: any = {}) {\n        super(\"Memory\", props,false);\n    }\n\n\n    protected static get instance(): Memory {\n        if (!HUMMER.__memory__) {\n            HUMMER.__memory__ = new Memory();\n        }\n        return HUMMER.__memory__\n    }\n\n\n    /**\n     * 保存键值对\n     *\n     * @param key 名称\n     * @param value 值   不能是function，或者包含function\n     */\n    public static set(key: string, value: any, cb?: Function) {\n        Memory.instance.set(key, value, cb);\n    }\n\n    /**\n    * 获取键对应的值\n    *\n    * @param key 名称\n    * @return value 值\n    */\n    public static get(key: string, cb?: Function): any {\n        return Memory.instance.get(key, cb);\n    }\n\n\n\n    /**\n     * 删除键值对\n     *\n     * @param key 名称\n     */\n    public static remove(key: string, cb?: Function) {\n        Memory.instance.remove(key, cb);\n    }\n\n\n    /**\n    * 删除所有数据\n    */\n    public static removeAll(cb?: Function) {\n        Memory.instance.removeAll(cb);\n    }\n\n    /**\n     * 是否存在某个键值对\n     *\n     * @param key 名称\n     */\n    public static exist(key: string, cb?: Function): boolean {\n        return Memory.instance.exist(key, cb);\n    }\n\n\n    protected set(key: string, value: any, cb?: Function) {\n        this.call(\"set\", key, value, cb);\n    }\n\n\n    protected get(key: string, cb?: Function): any {\n        return this.call(\"get\", key, cb);\n    }\n\n    protected remove(key: string, cb?: Function) {\n        this.call(\"remove\", key, cb);\n    }\n\n    protected removeAll(cb?: Function) {\n        this.call(\"removeAll\", cb);\n    }\n\n    protected exist(key: string, cb?: Function): boolean {\n        return this.call(\"exist\", key, cb);\n    }\n\n}","import { HummerComponent } from \"../../HummerComponent\"\nimport { View } from \"../../components/View\";\n\nconst HUMMER = __Hummer__;\nexport class Dialog extends HummerComponent {\n\n    protected _cancelable: boolean = true;\n    protected _lowLayer: boolean = false;\n\n    public constructor(props: any = {}) {\n        super(\"Dialog\", props);\n    }\n\n    protected static newInstance(): Dialog {\n        return new Dialog();\n    }\n\n    protected static checkInstance() {\n        if (!HUMMER.__dialog__) {\n            HUMMER.__dialog__ = Dialog.newInstance();\n        }\n    }\n\n    static get instance(): Dialog {\n        return HUMMER.__dialog__\n    }\n\n\n    // \t是否可以被取消（按返回键或者点击空白区域是否可以关闭对话框）\n    set cancelable(value: boolean) {\n        this._cancelable = value;\n        this.call(\"setCancelable\", value);\n    }\n\n    // \t对话框显示层级是否是低层级（比系统对话框层级低）\n    set lowLayer(value: boolean) {\n        this._lowLayer = value;\n        this.call(\"setLowLayer\", value);\n    }\n\n\n\n    /**\n     * 显示提示对话框（用户需要点击【确定】按钮才能继续进行操作）\n     *\n     * @param msg 内容\n     * @param btnText 按钮内容\n     * @param callback 按钮点击回调\n     */\n    static alert(msg: string, btnText: string, callback: () => void) {\n        Dialog.checkInstance();\n        Dialog.instance.alert(msg, btnText, callback);\n    }\n\n\n    /**\n     * 显示确认对话框（用户需要点击【确定】或【取消】按钮才能继续进行操作）\n     *\n     * @param title 标题\n     * @param msg 内容\n     * @param okBtnText [确认]按钮内容\n     * @param cancelBtnText [取消]按钮内容\n     * @param okCallback [确认]按钮点击回调\n     * @param cancelCallback [取消]按钮点击回调\n     */\n    static confirm(title: string, msg: string, okBtnText: string, cancelBtnText: string, okCallback: () => void, cancelCallback: () => void) {\n        Dialog.checkInstance();\n        Dialog.instance.confirm(title, msg, okBtnText, cancelBtnText, okCallback, cancelCallback);\n    }\n\n\n    /**\n     * 显示等待对话框（只能通过调用dismiss方法关闭对话框）\n     *\n     * @param msg 内容\n     */\n    static loading(msg: string) {\n        Dialog.checkInstance();\n        Dialog.instance.loading(msg);\n    }\n\n    /**\n     * 显示自定义对话框\n     *\n     * @param view 自定义View\n     */\n    static custom(view: View) {\n        Dialog.checkInstance();\n        Dialog.instance.custom(view);\n    }\n\n\n    /**\n     * 关闭对话框\n     */\n    static dismiss() {\n        Dialog.checkInstance();\n        Dialog.instance.dismiss();\n    }\n\n\n    public alert(msg: string, btnText: string, callback: () => void) {\n        this.call(\"alert\", msg, btnText, callback);\n    }\n\n\n\n\n    public confirm(title: string, msg: string, okBtnText: string, cancelBtnText: string, okCallback: () => void, cancelCallback: () => void) {\n        this.call(\"confirm\", title, msg, okBtnText, cancelBtnText, okCallback, cancelCallback);\n    }\n\n\n    public loading(msg: string) {\n        this.call(\"loading\", msg);\n    }\n\n\n\n    public custom(view: View) {\n        this.call(\"custom\", view.getOriginObject());\n    }\n\n\n    public dismiss() {\n        this.call(\"dismiss\");\n    }\n\n}","\nimport { HummerComponent } from \"../../HummerComponent\"\nimport { View } from \"../../components/View\"; \n\n\nconst HUMMER = __Hummer__;\nexport class Toast extends HummerComponent {\n\n    public constructor(props: any = {}) {\n        super(\"Toast\", props);\n    }\n\n    protected static newInstance(): Toast {\n        return new Toast();\n    }\n\n    protected static checkInstance() {\n        if (!HUMMER.__toast__) {\n            HUMMER.__toast__ = Toast.newInstance();\n        }\n    }\n\n    static get instance(): Toast {\n        return HUMMER.__toast__\n    }\n\n\n    /**\n     * 显示默认Toast\n     *\n     * @param msg 内容\n     * @param duration 时长（安卓上duration<=2000时是短时长，duration>2000是长时长）\n     */\n    static show(msg: string, duration?: number){\n        Toast.checkInstance();\n        Toast.instance.show(msg, duration);\n    }\n\n\n\n\n    /**\n     * 显示自定义Toast\n     *\n     * @param view 自定义View\n     * @param duration 时长（安卓上duration<=2000时是短时长，duration>2000是长时长）\n     */\n    static custom(view: View, duration: number){\n        Toast.checkInstance();\n        Toast.instance.custom(view.getOriginObject(), duration);\n    }\n   \n \n\n    protected show(msg: string, duration?: number) {\n        this.call(\"show\", msg, duration);\n    }\n\n\n    protected custom(view: View, duration: number) {\n        this.call(\"custom\", view, duration);\n    }\n\n}","import { HummerComponent } from \"../../HummerComponent\"\n\nconst HUMMER = __Hummer__;\nexport class Navigator extends HummerComponent {\n\n    public constructor(props: any = {}) {\n        super(\"Navigator\", props);\n    }\n\n    protected static get instance(): Navigator {\n        if (!HUMMER.__navigator__) {\n            HUMMER.__navigator__ = new Navigator();\n        }\n        return HUMMER.__navigator__\n    }\n\n    /**\n    * 打开某个页面\n    * @param pageInfo 页面信息\n    * @param callback 页面结果回调\n    */\n    public static openPage(pageInfo: Record<string, any>, callback?: Function) {\n        Navigator.instance.openPage(pageInfo, callback);\n    }\n\n\n    /**\n     * 关闭当前页面\n     * @param pageInfo 页面信息\n     */\n    public static popPage(pageInfo?: Record<string, any>) {\n        Navigator.instance.popPage(pageInfo);\n    }\n\n    /**\n     * 回退到指定页面\n     * @param pageInfo 页面信息\n     */\n    public static popToPage(pageInfo: Record<string, any>) {\n        Navigator.instance.popToPage(pageInfo);\n    }\n\n    /**\n     * 回退到首页\n     * @param pageInfo 页面信息（是否需要动画）\n     */\n    public static popToRootPage(pageInfo?: Record<string, any>) {\n        Navigator.instance.popToRootPage(pageInfo);\n    }\n\n\n    /**\n     * 向前回退指定数量的页面\n     * @param count 要回退的页面级数（默认是1）\n     * @param pageInfo 页面信息（是否需要动画）\n     */\n    public static popBack(count: number, pageInfo?: Record<string, any>) {\n        Navigator.instance.popBack(count, pageInfo);\n    }\n\n    protected openPage(pageInfo: Record<string, any>, callback?: Function) {\n        this.call(\"openPage\", pageInfo, callback);\n    }\n\n    protected popPage(pageInfo?: Record<string, any>) {\n        this.call(\"popPage\", pageInfo);\n    }\n\n    protected popToPage(pageInfo: Record<string, any>) {\n        this.call(\"popToPage\", pageInfo);\n    }\n\n    protected popToRootPage(pageInfo?: Record<string, any>) {\n        this.call(\"popToRootPage\", pageInfo);\n    }\n\n    protected popBack(count: number, pageInfo?: Record<string, any>) {\n        this.call(\"popBack\", count, pageInfo);\n    }\n\n}","import { HummerComponent } from \"../../HummerComponent\"\n\nconst HUMMER = __Hummer__;\nexport class Storage extends HummerComponent {\n\n\n    public constructor(props: any = {}) {\n        super(\"Storage\", props,false);\n    }\n\n    protected static get instance(): Storage {\n        if (!HUMMER.__storage__) {\n            HUMMER.__storage__ = new Storage();\n        }\n        return HUMMER.__storage__\n    }\n\n\n    /**\n     * 保存键值对\n     *\n     * @param key 名称\n     * @param value 值\n     */\n    public static set(key: string, value: any, cb?: Function) {\n        return Storage.instance.set(key, value, cb);\n    }\n\n    /**\n    * 获取键对应的值\n    *\n    * @param key 名称\n    * @return value 值\n    */\n    public static get(key: string, cb?: Function): any {\n        return Storage.instance.get(key, cb);\n    }\n\n\n\n    /**\n     * 删除键值对\n     *\n     * @param key 名称\n     */\n    public static remove(key: string, cb?: Function) {\n        return Storage.instance.remove(key, cb);\n    }\n\n\n    /**\n    * 删除所有数据\n    */\n    public static removeAll(cb?: Function) {\n        return Storage.instance.removeAll(cb);\n    }\n\n    /**\n     * 是否存在某个键值对\n     *\n     * @param key 名称\n     */\n    public static exist(key: string, cb?: Function): boolean {\n        return Storage.instance.exist(key, cb);\n    }\n\n\n    protected set(key: string, value: any, cb?: Function) {\n        return this.call(\"set\", key, value, cb);\n    }\n\n\n    protected get(key: string, cb?: Function): any {\n        return this.call(\"get\", key, cb);\n    }\n\n    protected remove(key: string, cb?: Function) {\n        return this.call(\"remove\", key, cb);\n    }\n\n    protected removeAll(cb?: Function) {\n        return this.call(\"removeAll\", cb);\n    }\n\n    protected exist(key: string, cb?: Function): boolean {\n        return this.call(\"exist\", key, cb)\n    }\n\n}","import { HummerComponent } from \"../../HummerComponent\"\n\n\nexport class Request extends HummerComponent {\n\n    protected _url: string = '';\n    protected _method: string = 'POST';\n    protected _timeout: number = 10000;\n    protected _header: object | undefined = undefined;\n    protected _param: object | undefined = undefined;\n\n\n    public constructor(props: any = {}) {\n        super(\"Request\", props,false);\n    }\n\n\n    // API地址\n    public set url(value: string) {\n        this._url = value;\n        this.call(\"setUrl\", value);\n    }\n\n    public get url() {\n        return this._url;\n    }\n\n    // 请求方式\n    public set method(value: string) {\n        this._method = value;\n        this.call(\"setMethod\", value);\n    }\n\n    public get method() {\n        return this._method;\n    }\n\n    // 超时时间（单位：毫秒）\n    public set timeout(value: number) {\n        this._timeout = value;\n        this.call(\"setTimeout\", value);\n    }\n\n    public get timeout() {\n        return this._timeout;\n    }\n\n    // 网络请求头部\n    public set header(value: object | undefined) {\n        this._header = value;\n        this.call(\"setHeader\", value);\n    }\n\n    public get header() {\n        return this._header;\n    }\n\n    // 网络请求参数\n    public set param(value: object | undefined) {\n        this._param = value;\n        this.call(\"setParam\", value);\n    }\n\n    public get param() {\n        return this._param;\n    }\n\n    /**\n    * 发起网络请求\n    * @param callback 请求返回触发的回调,其中参数为request本身\n    */\n    public send(callback: (response: Response) => void) {\n        this.call(\"send\", callback);\n    }\n\n\n}","import { HummerComponent } from \"../../HummerComponent\"\n\n\n\nexport class WebSocket extends HummerComponent {\n\n    protected _url_?: string = \"\";\n    protected __onopen__?: Function = undefined;\n    protected __onmessage__?: Function = undefined;\n    protected __onclose__?: Function = undefined;\n    protected __onerror__?: Function = undefined;\n\n\n    public constructor(url: string) {\n        super(\"WebSocket\", {},false);\n        this.addEventListener(\"__onopen__\", () => {\n            if (this.__onopen__ != undefined) {\n                this.__onopen__();\n            }\n        });\n        this.addEventListener(\"__onmessage__\", (event:any) => {\n            if (this.__onmessage__ != undefined) {\n                this.__onmessage__(event);\n            }\n        });\n        this.addEventListener(\"__onclose__\", (event:any) => {\n            if (this.__onclose__ != undefined) {\n                this.__onclose__(event);\n            }\n        });\n        this.addEventListener(\"__onerror__\", () => {\n            if (this.__onerror__ != undefined) {\n                this.__onerror__();\n            }\n        });\n        this.connect(url);\n    }\n\n\n    set onopen(onopen: Function | undefined) {\n        this.__onopen__ = onopen;\n    }\n\n    get onopen() {\n        return this.__onopen__;\n    }\n\n    set onmessage(onmessage: Function | undefined) {\n        this.__onmessage__ = onmessage;\n    }\n\n    get onmessage() {\n        return this.__onmessage__;\n    }\n\n    set onclose(onclose: Function | undefined) {\n        this.__onclose__ = onclose;\n    }\n\n    get onclose() {\n        return this.__onclose__;\n    }\n\n    set onerror(onerror: Function | undefined) {\n        this.__onerror__ = onerror;\n    }\n\n    get onerror() {\n        return this.__onerror__;\n    }\n\n\n    public connect(url: string) {\n        this._url_ = url;\n        this.call(\"connect\", url);\n    }\n\n\n    public close() {\n        this.call(\"close\");\n    }\n\n    /**\n    * 发送数据\n    */\n    public send(data: string) {\n        this.call(\"send\", data);\n    }\n\n\n}","import { Scroller, ScrollEvent } from '../Scroller';\nimport { View } from '../View'\nimport { Hummer } from '../../Hummer'\nimport { HummerElement, ViewEvent } from \"../../HummerElement\"\n\nexport class ListJS extends HummerElement {\n    private _onRegister: Function = () => { };\n    private _onCreate: Function = () => { };\n    private _onUpdate: Function = () => { };\n    private _onRefreshList: (state: number) => void = (state: number) => {};\n    private _eventListener: (event: ScrollEvent | ViewEvent | any) => void | Function | EventListener = () => {};\n    private _onLoadMoreList: Function | null = null;\n    private _refreshView: View = new View();\n    private _loadMoreView: View = new View();\n    private visibleItems = new Map<number, any>(); // 渲染中的组件数组\n    private visibleItemHeight = new Map<number, number>(); // 渲染中的组件高度数组\n    private scrollY: number = 0; // 滚动距离\n    private startIndex: number = 0; // 开始下标\n    private maxIndexByAvailableHeight: number = 0; // 首屏幕最大item的下标\n    private lastStartIndex: number = 0; // 上次开始下标\n    private initListItemNumber: number = 0; // 初始化的list长度\n    private deletedIndices: Array<number> = []; // 记录已经从根View中移除的ListItem下标\n    private direction: string = 'down'; // 滑动方向\n    private viewTop: View; // 占位组件\n    private scroller: Scroller; // 滚动组件\n    private topViewId: number  = -1 // 在渲染数组中的位置\n\n    public constructor(id: string = \"\", name: string = \"\", props: any = {}) {\n        super(\"View\", name, { ...props, viewId: id });\n        this.scroller = new Scroller()\n        // 初始化一个topView用来在组件删除时占位\n        this.viewTop = new View()\n        this.viewTop.style = {\n            height: 0\n        }\n        this.scroller.appendChild(this.viewTop)\n        this.visibleItems.set(this.topViewId, this.viewTop);\n        this.appendChild(this.scroller)\n        this.scroller.addEventListener('scroll', this.onScroll.bind(this));\n    }\n\n\n    // 滑动事件回调\n    private onScroll(event: any) {\n        this._eventListener(event)\n        this.scrollY = event.offsetY;\n        this.direction = event.dy < 0 ? 'up' : 'down';\n        this.updateVisibleItems();\n    }\n\n    // 到达底部事件回调\n    private onScrollBottom = (state: number) => {\n        if (this.startIndex >= this.initListItemNumber && this._onLoadMoreList) {\n            // console.log(\"达到底部，loadMore调用中...\")\n            this._onLoadMoreList(state);\n        } \n    }\n\n    // 清空历史状态数据\n    private resetListState() {\n        // 清空标识\n        this.startIndex = this.maxIndexByAvailableHeight =  0\n        this.deletedIndices = []\n        this.direction = 'down'\n    }\n    // 清空历史视图数据\n    private resetListView() {\n        this.scroller.removeAll()\n        this.visibleItems.clear()\n        // 重置topView\n        let newTopView = new View()\n        this.viewTop.style = { height: 0 }\n        this.scroller.appendChild(newTopView)\n        this.visibleItems.set(this.topViewId, newTopView);\n    }\n\n    // 到达顶部事件回调\n    private onScrollTop = (state: number) => {\n        if (!this._onRefreshList) return;\n        // 清空历史数据\n        if(state === 2){\n            this.resetListState()\n        }\n        // console.error(\"达到顶部，数据更新中...\")\n        // 刷新数据\n        this._onRefreshList(state)\n    }\n\n    private renderItem(index: number, cell: any) {\n        this.onUpdate(index, cell);\n        this.scroller.appendChild(cell);\n    }\n\n    // 处理topView\n    private adjustTopView(cell: any, direction: string) {\n        if (direction === 'down') {\n            this.viewTop.style = { height: this.viewTop.style.height + cell.style.height };\n        } else {\n            this.viewTop.style = { height: this.viewTop.style.height - cell.style.height };\n        }\n        let oldViewTop = this.visibleItems.get(this.topViewId)\n        this.scroller.replaceChild(this.viewTop, oldViewTop);\n        this.visibleItems.set(this.topViewId, this.viewTop)\n    }\n\n    // 在deletedIndices中删除指定下标\n    private removeDeletedIndex(index: number) {\n        const arrIndex = this.deletedIndices.indexOf(index);\n        if (arrIndex !== this.topViewId) {\n            this.deletedIndices.splice(arrIndex, 1);\n        }\n    }\n\n    // 处理向下滑动\n    private handleDownDeletion(cell: any) {\n        // 移动到最下方，执行刷新方法 \n        let { maxValue } = this.getMinAndMaxRenderItemIndex()\n        let newIndex = maxValue + 1\n        this.onUpdate(newIndex + \"恢复\", cell);\n        // 新增renderedItems\n        this.visibleItems.set(newIndex, cell)\n        // 删除newIndex\n        this.removeDeletedIndex(newIndex)\n        // 向下添加数据\n        this.scroller.appendChild(cell)\n    }\n\n    // 处理向上滑动\n    private handleUpDeletion(cell: any) {\n        // 移动到最上方，执行刷新方法\n        if (this.startIndex > 0) {\n            let { minValue } = this.getMinAndMaxRenderItemIndex()\n            let newIndex = minValue - 1\n            if (newIndex < 0) return\n            this.onUpdate(newIndex + '恢复', cell);\n            // 新增renderedItems\n            let oldCell = this.visibleItems.get(newIndex + 1)\n            this.visibleItems.set(newIndex, cell)\n            // 删除newIndex\n            this.removeDeletedIndex(newIndex)\n            // 向上添加数据\n            this.scroller.insertBefore(cell, oldCell)\n        }\n    }\n\n    // 删除数据\n    private removeCell(index: number, cell: any) {\n        this.scroller.removeChild(cell)\n        // 删除renderedItems\n        this.visibleItems.delete(index)\n        this.deletedIndices.push(index);\n    }\n\n    // 处理需要删除的item\n    private handleDeletion(index: number) {\n        if (index === this.topViewId || this.deletedIndices.includes(index)) return\n        const cell = this.visibleItems.get(index);\n        if (this.direction === 'down') {\n            // 处理topView\n            this.adjustTopView(cell, 'down')\n            this.removeCell(index, cell)\n            this.handleDownDeletion(cell)\n        } else {\n            // 处理topView\n            this.adjustTopView(cell, 'up')\n            this.removeCell(index, cell)\n            this.handleUpDeletion(cell)\n        }\n    }\n\n    // 获取渲染数组的最小值和最大值（不包含topView）\n    private getMinAndMaxRenderItemIndex() {\n        let maxValue = Number.MIN_SAFE_INTEGER;\n        let minValue = Number.MAX_SAFE_INTEGER;\n        for (const key of this.visibleItems.keys()) {\n            if (key > maxValue) {\n                maxValue = key;\n            }\n            if (key > -1 && key < minValue) {\n                minValue = key;\n            }\n        }\n        return {\n            minValue,\n            maxValue\n        }\n    }\n\n    // 计算开始下标\n    private calculateVisibleIndices(): boolean {\n        if(this.scrollY ===0 && this.startIndex !== 0) return false\n        let currHeight = 0\n        let currStartIndex = 0\n        // 计算开始下标\n        for (let i = 0; i <= this.initListItemNumber; i++) {\n            let cell = this.visibleItems.get(i)\n            if (!cell) {\n                let cellInvisibleItemHeight = this.visibleItemHeight.get(i)\n                if(cellInvisibleItemHeight){\n                    currHeight += cellInvisibleItemHeight\n                }\n            }else{\n                this.visibleItemHeight.set(i, cell.style.height)\n                currHeight += cell.style.height;\n            }\n            if (currHeight >= this.scrollY) {\n                currStartIndex = i;\n                break;\n            } else {\n                currStartIndex = i;\n            }\n        }\n        // 处理边界case\n        if (currStartIndex === 0) return false\n        // 滑动过程中动态给结束下标赋值\n        if (this.lastStartIndex === currStartIndex && this.startIndex !== 0) return false\n        this.startIndex = currStartIndex\n        return true\n\n    }\n\n    // 处理向下滑动\n    private handleDown() {\n        // 删除上方数据\n        if(this.startIndex < this.maxIndexByAvailableHeight) return\n        for (let index = 0; index <= this.startIndex - this.maxIndexByAvailableHeight; index++) {\n            // 处理需要删除的item\n            if(!this.deletedIndices.includes(index)){\n                // console.log(\"删除上方数据\" + index)\n                this.handleDeletion(index);\n            }\n        }\n    }\n\n    // 处理向上滑动\n    private handleUp() {\n        let { minValue, maxValue } = this.getMinAndMaxRenderItemIndex()\n        if(maxValue <= 3*this.maxIndexByAvailableHeight) return\n        // 上方保留一屏数据\n        let dec = this.startIndex  - this.maxIndexByAvailableHeight + 1\n        // 计算本次向上滑动的范围\n        let recoverNum = Math.abs(minValue - dec) \n        for (let index = 0; index <= recoverNum; index++) {\n            let itemIndex =  maxValue - index\n            if(itemIndex < 0) break\n            // 判断边界条件\n            if (!this.deletedIndices.includes(itemIndex)) {\n                // console.log(\"删除下方数据\" + itemIndex)\n                // 处理需要删除的item\n                this.handleDeletion(itemIndex);\n            }\n        }\n    }\n\n\n    // 滑动过程实时渲染组件\n    private updateVisibleItems() {\n        // 计算开始和结束下标\n        let refresh: boolean = this.calculateVisibleIndices()\n        if (!refresh) return\n        // 滚动过程实时渲染数据\n        if (this.direction === 'up') {\n            this.handleUp()\n        } else {\n            this.handleDown()\n        }\n        // 滚动计算后更新上次上下标\n        this.lastStartIndex = this.startIndex;\n    }\n\n\n     // 初始化3屏数据\n    private initList(){\n        let currHeight = 0\n        let currEndIndex = 0\n        // 清空上次view\n        this.resetListView()\n        // 初始化结束下标\n        for (let i = 0; i < this.initListItemNumber; i++) {\n            const type = this.onRegister(i);\n            const cell = this._onCreate(type);\n            this.visibleItems.set(i, cell)\n            currHeight += cell.style.height;\n            if (currHeight > Hummer.env.availableHeight) {\n                currEndIndex = i;\n                break;\n            } else {\n                currEndIndex = i;\n            }\n        }\n        this.maxIndexByAvailableHeight = Math.min(this.initListItemNumber, currEndIndex)\n        // console.error(\"初始化下标数据\" + this.maxIndexByAvailableHeight)\n        // 渲染开始下标到结束下标的初始化视图数据 \n        // 3*this.endIndex包括开始下标之前、初始化渲染的数据、下标之后\n        for (let i = 0; i <= 3*this.maxIndexByAvailableHeight; i++) {\n            let cell = this.visibleItems.get(i)\n            if (!cell) {\n                let type = this.onRegister(i);\n                cell = this._onCreate(type);\n                this.visibleItems.set(i, cell)\n            }\n            this.renderItem(i, cell)\n        }\n    }\n\n    // 入口函数\n    refresh(count: number) {\n        this.initListItemNumber = count;\n        // console.error(\"初始化渲染总数\", this.initListItemNumber)\n        // loadMore加载更多数据\n        if (this.startIndex !== 0) {\n           this.updateVisibleItems()\n        } else {\n            // 初始化首屏数据\n            this.initList()\n        }\n    }\n\n    \n    stopLoadMore(enable: boolean){\n        this.scroller.stopLoadMore(enable)\n    }\n\n    stopPullRefresh(){\n        this.scroller.stopPullRefresh()\n    }\n\n    set onLoadMore(value: (state: number) => void) {\n        this._onLoadMoreList = value;\n        this.scroller.onLoadMore = this.onScrollBottom\n    }\n\n    set onRefresh(value: (state: number) => void) {\n        this._onRefreshList = value;\n        this.scroller.onRefresh = this.onScrollTop\n    }\n\n    get refreshView() {\n        return this._refreshView;\n    }\n\n    set refreshView(value: View) {\n        this._refreshView = value;\n        this.scroller.refreshView = this._refreshView;\n    }\n\n    get loadMoreView() {\n        return this._loadMoreView;\n    }\n\n    set loadMoreView(value: View) {\n        this._loadMoreView = value;\n        this.scroller.loadMoreView = this._loadMoreView;\n    }\n\n\n    get onCreate() {\n        return this._onCreate;\n    }\n\n    set onCreate(value: Function) {\n        this._onCreate = value;\n    }\n\n    get onUpdate() {\n        return this._onUpdate;\n    }\n\n    set onUpdate(value: Function) {\n        this._onUpdate = value;\n    }\n\n    get onRegister() {\n        return this._onRegister;\n    }\n\n    set onRegister(value: Function) {\n        this._onRegister = value;\n    }\n\n    set showScrollBar(value: boolean) {\n        this.scroller.showScrollBar = value;\n    }\n\n    set bounces(value: boolean) {\n        this.scroller.bounces = value;\n    }\n\n    /**\n     * 添加事件监听\n     * \n     * @param eventName \n     * @param eventListener   滚动事件:scroll @see ScrollEvent\n     * @param useCapture \n     */\n    addEventListener(eventName: string, eventListener: (event: ScrollEvent | ViewEvent | any) => void | Function | EventListener, useCapture?: boolean | undefined): void {\n        if(eventName === 'scroll'){\n            this._eventListener = eventListener\n        }\n    }\n}","//Hummer api\n\nimport { Hummer } from \"./Hummer\"\n\nexport * from \"./HMObject\"\n\nexport * from \"./Hummer\"\n\nexport * from \"./EventTarget\"\n\nexport * from \"./Node\"\n\nexport * from \"./Element\"\n\nexport * from \"./HummerElement\"\n\nexport * from \"./HummerElement/HummerGlobalProxy\"\n\nexport * from \"./anim/BasicAnimation\"\n\nexport * from \"./anim/KeyframeAnimation\"\n\nexport * from \"./components/View\"\n\nexport * from \"./components/Text\"\n\nexport * from \"./components/Input\"\n\nexport * from \"./components/List\"\n\nexport * from \"./components/ViewPager\"\n\nexport * from \"./components/TextArea\"\n\nexport * from \"./components/Button\"\n\nexport * from \"./components/Scroller\"\n\nexport * from \"./components/Scroller/LoadMoreView\"\n\nexport * from \"./components/Scroller/RefreshView\"\n\nexport * from \"./components/HorizontalScroller\"\n\nexport * from \"./components/Canvas\"\n\nexport * from \"./components/CanvasView\"\n\nexport * from \"./components/Loading\"\n\nexport * from \"./components/Switch\"\n\nexport * from \"./components/Image\"\n\nexport * from \"./HummerComponent\"\n\nexport * from \"./module/Memory\"\n\nexport * from \"./module/Dialog\"\n\nexport * from \"./module/Toast\"\n\nexport * from \"./module/Navigator\"\n\nexport * from \"./module/Storage\"\n\nexport * from \"./module/NotifyCenter\"\n\nexport * from \"./module/Request\"\n\nexport * from \"./module/WebSocket\"\n\nexport * from \"./components/ListJS\"\n\n\n__GLOBAL__.Hummer = {\n\n    getRootView() {\n        return Hummer.getRootView();\n    },\n\n    Hummer:{\n        pageInfo:{},\n        dd:\"xxx\"\n    }\n\n}\n\n\n\n\n\n"],"names":["_Document_","HUMMER"],"mappings":"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"}